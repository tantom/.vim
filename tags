!	test/a.js	/^								d.data += d.data != "" ? "&filter=1": "filter=1",$/;"	r
!	test/a.js	/^						if (typeof c != "string") {$/;"	r
!	test/a.js	/^					qing.dom.getAttr(h, "data-loadfunc") != "1" && (qing.dom.setAttr(h, "data-loadfunc", 1), qing.on(h, "load", function(a) {$/;"	r
!	test/a.js	/^				if (typeof b.getElementById != "undefined" && ! c) {$/;"	r
!	test/a.js	/^				if (typeof b.getElementsByName != "undefined") {$/;"	r
!	test/a.js	/^				if (typeof b.getElementsByTagName != "undefined") return b.getElementsByTagName(a[1])$/;"	r
!	test/a.js	/^				return a != "auto" ? \/\\d+\/.exec(a)[0] : c.offsetHeight$/;"	r
!	test/a.js	/^				return a != "auto" ? \/\\d+\/.exec(a)[0] : c.offsetWidth$/;"	r
!	test/a.js	/^				return d ? d.id === a[1] || typeof d.getAttributeNode != "undefined" && d.getAttributeNode("id").nodeValue === a[1] ? [d] : undefined: []$/;"	r
!	test/a.js	/^			if (!c.opera || h.tagName != "TR") f.top -= h.scrollTop;$/;"	r
!	test/a.js	/^			if (a != "onsuccess") b(n);$/;"	r
!	test/a.js	/^			if (typeof b.getElementById != "undefined" && ! c) {$/;"	r
!	test/a.js	/^			if (typeof b.getElementsByClassName != "undefined" && ! c) return b.getElementsByClassName(a[1])$/;"	r
!	test/a.js	/^			var c = typeof a.getAttributeNode != "undefined" && a.getAttributeNode("id");$/;"	r
!	test/a.js	/^		a.firstChild && typeof a.firstChild.getAttribute != "undefined" && a.firstChild.getAttribute("href") !== "#" && (l.attrHandle.href = function(a) {$/;"	r
!	test/a.js	/^		d.method && d.method != "get" && d.method != "GET" ? (e = "post", d.data && typeof d.data == "object" ? d.data.bdstoken = d.data.bdstoken || qBdsToken: d.data && typeof d.data == "string" && (d.data = qing.url.queryToJson(d.data), d.data.bdstoken = d.data.bdstoken || qBdsToken), d.data || (d.data = {$/;"	r
!	test/a.js	/^		if (!b || typeof b != "string") return e;$/;"	r
!	test/a.js	/^		if (typeof screen.fontSmoothingEnabled != "undefined") return screen.fontSmoothingEnabled;$/;"	r
!	test/a.js	/^		return a.tagName.toLowerCase() != "embed"$/;"	r
!	test/a.js	/^		return d || (d = typeof b.getElementsByTagName != "undefined" ? b.getElementsByTagName("*") : []),$/;"	r
!	test/a.js	/^		typeof h != "function" && (h = new Function);$/;"	r
!	test/a.js	/^		}), d.data = qing.url.jsonToQuery(d.data), d.data && d.data != "" && (d.data += "&"), d.data += "qing_request_source=" + a, d.timeout = d.timeout || 1e4, d.ontimeout = d.ontimeout || function() {$/;"	r
!	test/a.js	/^	for (var a in this) typeof this[a] != "function" && delete this[a];$/;"	r
!	test/a.js	/^	g = typeof b.autofix != "undefined" ? b.autofix: ! 0,$/;"	r
!	test/a.js	/^	if (!b || typeof b != "function") b = function(a) {$/;"	r
!	test/a.js	/^	if (typeof a.length != "number" || typeof a == "string" || baidu.lang.isFunction(a)) return [a];$/;"	r
!	test/a.js	/^	if (typeof b != "function") return; ! this.__listeners && (this.__listeners = {});$/;"	r
!	test/a.js	/^	return sEval != "" ? eval(sEval) : {}$/;"	r
!	test/a.js	/^	typeof c != "undefined" && (baidu.dom.g(a).style[b] = c + (isNaN(c) ? "": "px"))$/;"	r
!	test/a.js	/^	typeof e[a] != "object" && (e[a] = []);$/;"	r
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
"	test/a.js	/^		h == "GET" && (d && (a += (a.indexOf("?") >= 0 ? "&": "?") + d, d = null), c.noCache && (a += (a.indexOf("?") >= 0 ? "&": "?") + "b" + + (new Date) + "=1")),$/;"	r
"	test/a.js	/^	return a += (a.indexOf("?") < 0 ? "?_": "&_") + + (new Date) + "=1",$/;"	r
"	test/a.js	/^	typeof b == "string" && (a += (a.indexOf("?") < 0 ? "?_": "&_") + + (new Date) + "=1"),$/;"	r
"[test!	test/a.js	/^				b.call(document.documentElement, "[test!='']:sizzle")$/;"	r
"asyn	test/a.js	/^	\/[\\?\\&]asyn\\=\/.test(a) || (a += (a.indexOf("?") < 0 ? "?": "&") + "asyn=1"),$/;"	r
"asyn	test/a.js	/^	\/[\\?\\&]asyn\\=\/.test(a) || (a = a + (a.indexOf("?") == - 1 ? "?": "&") + "asyn=1"),$/;"	r
(a	test/a.js	/^	a.indexOf("on") && (a = "on" + a),$/;"	r
(a	test/a.js	/^	a.indexOf("on") && (a = "on" + a);$/;"	r
(a.display	test/a.js	/^		b == "inline-block" ? (a.display = "inline", a.zoom = 1) : a.display = b$/;"	r
(a.style.display	test/a.js	/^		a.src && (a.style.display = ""),$/;"	r
(a["for"]	test/a.js	/^	return baidu.browser.ie < 8 ? (a["for"] = "htmlFor", a["class"] = "className") : (a.htmlFor = "for", a.className = "class"),$/;"	r
(a[4]	test/a.js	/^				a[2] === "~=" && (a[4] = " " + a[4] + " "),$/;"	r
(b	test/a.js	/^	"function" != typeof b && (b = function(a, b) {$/;"	r
(b	test/a.js	/^	}: a.style.removeAttribute && (b = function(a, b) {$/;"	r
(b.url	test/a.js	/^	if (baidu.browser.ie) return b.url || (b.url = ""),$/;"	r
(c	test/a.js	/^		}: document.attachEvent && (c = function() {$/;"	r
(d	test/a.js	/^	b.url && (d = "<link type='text\/css' rel='stylesheet' href='" + b.url + "'\/>"),$/;"	r
(d.style.height	test/a.js	/^	d && (b == 1 ? (d.style.height = "90px", d.height = 90) : (d.style.height = "37px", d.height = 37)),$/;"	r
(e	test/a.js	/^		}) : (e = "get", d.data && typeof d.data == "object" && (d.data = qing.url.jsonToQuery(d.data)), c += (c.indexOf("?") == - 1 ? "?": "&") + "qing_request_source=" + a);$/;"	r
(e.position	test/a.js	/^	d.position !== "fixed" && (e.position = "absolute"),$/;"	r
(g	test/a.js	/^	g.indexOf("on") && (g = "on" + g),$/;"	r
(l.attrHandle.href	test/a.js	/^		a.firstChild && typeof a.firstChild.getAttribute != "undefined" && a.firstChild.getAttribute("href") !== "#" && (l.attrHandle.href = function(a) {$/;"	r
(l.find.ID	test/a.js	/^		document.getElementById(b) && (l.find.ID = function(a, b, c) {$/;"	r
(l.find.TAG	test/a.js	/^		a.getElementsByTagName("*").length > 0 && (l.find.TAG = function(a, b) {$/;"	r
(r	test/a.js	/^	}: (r = function(a, b) {$/;"	r
+	test/a.js	/^				a.url += "&callback=" + c$/;"	r
+	test/a.js	/^			a.url.indexOf("?") ? a.url += "?t=" + (new Date).getTime() : a.url += "&" + (new Date).getTime();$/;"	r
+	test/a.js	/^			d += ("00" + e).substr(e.length);$/;"	r
+	test/a.js	/^			f += "}"$/;"	r
+	test/a.js	/^		i != 0 && (sNS += "."),$/;"	r
+	test/a.js	/^		return b.constructor == Number && ! \/zIndex|fontWeight|opacity|zoom|lineHeight\/i.test(a) && (b += "px"),$/;"	r
+	test/a.js	/^		sEval += "if (typeof(" + sNS + ") == 'undefined') " + sNS + " = new Object();else " + sNS + ";"$/;"	r
+	test/a.js	/^	h && (a += "&_" + + (new Date) + "=1");$/;"	r
+	test/a.js	/^	typeof b == "object" && (b = qing.url.jsonToQuery(b), a += "&" + b);$/;"	r
/\[name	test/a.js	/^			NAME: \/\\[name=['"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)['"]*\\]\/,$/;"	r
ABBR_SNIP_MASK	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:ABBR_SNIP_MASK = '...'$/;"	v
ASYNC_PY_PATH	bundle/l9/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
ATTR	test/a.js	/^			ATTR: function(a, b) {$/;"	r
ATTR	test/a.js	/^			ATTR: function(a, b, c, d, e, f) {$/;"	r
AcpGlobalAutoCommand	bundle/autocomplete/autoload/acp.vim	/^  augroup AcpGlobalAutoCommand$/;"	a
AddDivider	bundle/powerline/autoload/Pl/Parser.vim	/^function! s:AddDivider(text, side, mode, colors, prev, curr, next) " {{{$/;"	f
AddFunc_Opt	bundle/ultisnips/test.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	bundle/ultisnips/test.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
Agrep_Path	bundle/grep/plugin/grep.vim	/^    let Agrep_Path = 'agrep'$/;"	v
Align	bundle/align/autoload/Align.vim	/^fun! Align#Align(hasctrl,...) range$/;"	f
Align	bundle/align/autoload/Align.vim	/^fun! Align#AlignCtrl(...)$/;"	f
Align	bundle/align/autoload/Align.vim	/^fun! Align#AlignPop()$/;"	f
Align	bundle/align/autoload/Align.vim	/^fun! Align#AlignPush()$/;"	f
Align	bundle/align/autoload/Align.vim	/^fun! Align#AlignReplaceQuotedSpaces() $/;"	f
AlignMaps	bundle/align/autoload/AlignMaps.vim	/^fun! AlignMaps#Afnc()$/;"	f
AlignMaps	bundle/align/autoload/AlignMaps.vim	/^fun! AlignMaps#CharJoiner(chr)$/;"	f
AlignMaps	bundle/align/autoload/AlignMaps.vim	/^fun! AlignMaps#Equals() range$/;"	f
AlignMaps	bundle/align/autoload/AlignMaps.vim	/^fun! AlignMaps#FixMultiDec()$/;"	f
AlignMaps	bundle/align/autoload/AlignMaps.vim	/^fun! AlignMaps#StdAlign(mode) range$/;"	f
AlignMaps	bundle/align/autoload/AlignMaps.vim	/^fun! AlignMaps#WrapperEnd() range$/;"	f
AlignMaps	bundle/align/autoload/AlignMaps.vim	/^fun! AlignMaps#WrapperStart(vis) range$/;"	f
Align_xstrlen	bundle/align/autoload/Align.vim	/^  let g:Align_xstrlen= 0$/;"	v
Align_xstrlen	bundle/align/autoload/Align.vim	/^  let g:Align_xstrlen= 1$/;"	v
Anon_NoTrigger_AfterSpace	bundle/ultisnips/test.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	bundle/ultisnips/test.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	bundle/ultisnips/test.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	bundle/ultisnips/test.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	bundle/ultisnips/test.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	bundle/ultisnips/test.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	bundle/ultisnips/test.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	bundle/ultisnips/test.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	bundle/ultisnips/test.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
Asyncer	bundle/l9/autoload/l9/async.py	/^class Asyncer:$/;"	c
Backspace_TabStop_NotZero	bundle/ultisnips/test.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	bundle/ultisnips/test.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
BlockGetCommentRx	bundle/tcomment/autoload/tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	bundle/tcomment/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	bundle/tcomment/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
CACHE_REVISION	bundle/powerline/autoload/Pl.vim	/^	let s:CACHE_REVISION = 7$/;"	v
CHILD	test/a.js	/^			CHILD: function(a) {$/;"	r
CHILD	test/a.js	/^			CHILD: function(a, c) {$/;"	r
CLASS	test/a.js	/^			CLASS: function(a, b) {$/;"	r
CLASS	test/a.js	/^			CLASS: function(a, b, c, d, e, f) {$/;"	r
CheckConditions	bundle/powerline/autoload/Pl/Segment.vim	/^function! s:CheckConditions(params) " {{{$/;"	f
CommentBlock	bundle/tcomment/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, uncomment, checkRx, cdef, indentStr)$/;"	f
CommentDef	bundle/tcomment/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
CommentMode	bundle/tcomment/autoload/tcomment.vim	/^function! s:CommentMode(commentMode, newmode) "{{{3$/;"	f
CompensateForPUM	bundle/ultisnips/plugin/UltiSnips.vim	/^function! CompensateForPUM()$/;"	f
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	bundle/ultisnips/test.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	bundle/ultisnips/test.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	bundle/ultisnips/test.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
ConstructFromComments	bundle/tcomment/autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
CreateAutocmds	bundle/powerline/plugin/Powerline.vim	/^	function! s:CreateAutocmds()$/;"	f
Cterm2GUI	bundle/powerline/autoload/Pl/Hi.vim	/^function! s:Cterm2GUI(cterm) " {{{$/;"	f
CursorMovement_BS_InEditMode	bundle/ultisnips/test.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	bundle/ultisnips/test.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
DATA_FILE_VERSION	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:DATA_FILE_VERSION = 400$/;"	v
DefaultValue	bundle/tcomment/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DeleteCurrentTabStop1_JumpBack	bundle/ultisnips/test.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	bundle/ultisnips/test.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	bundle/ultisnips/test.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	bundle/ultisnips/test.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	bundle/ultisnips/test.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	bundle/ultisnips/test.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
DestroyMark	bundle/align/plugin/cecutil.vim	/^fun! DestroyMark(markname)$/;"	f
DoNotExpandAfterSpace_ExceptCorrectResult	bundle/ultisnips/test.py	/^class DoNotExpandAfterSpace_ExceptCorrectResult(_SimpleExpands):$/;"	c
DrChipTopLvlMenu	bundle/align/plugin/AlignMapsPlugin.vim	/^  let g:DrChipTopLvlMenu= "DrChip."$/;"	v
EMPTY_SEGMENT	bundle/powerline/autoload/Pl/Parser.vim	/^let s:EMPTY_SEGMENT = { 'type': 'empty' }$/;"	v
EditableTextObject	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^class EditableTextObject(TextObject):$/;"	c
Egrep_Path	bundle/grep/plugin/grep.vim	/^    let Egrep_Path = 'egrep'$/;"	v
EncodeCommentPart	bundle/tcomment/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	bundle/tcomment/autoload/tcomment.vim	/^function! s:EndColRx(pos)$/;"	f
EndLineRx	bundle/tcomment/autoload/tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndOfTextToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class EndOfTextToken(Token):$/;"	c
EndPosRx	bundle/tcomment/autoload/tcomment.vim	/^function! s:EndPosRx(mode, line, col)$/;"	f
EscapeCharToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapedChar	bundle/ultisnips/plugin/UltiSnips/text_objects/_escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
Events	test/a.js	/^		Events: ["bubbles", "cancelable"]$/;"	r
ExclusiveSelection_RealWorldCase_Test	bundle/ultisnips/test.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	bundle/ultisnips/test.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
Executor	bundle/l9/autoload/l9/async.py	/^class Executor:$/;"	c
ExitSnippetModeAfterTabstopZero	bundle/ultisnips/test.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExceptCorrectResult	bundle/ultisnips/test.py	/^class ExpandInTheMiddleOfLine_ExceptCorrectResult(_SimpleExpands):$/;"	c
ExtendCDef	bundle/tcomment/autoload/tcomment.vim	/^function! s:ExtendCDef(beg, end, commentMode, cdef, args)$/;"	f
ExtractCommentsPart	bundle/tcomment/autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
FOSimple_Break_ExceptCorrectResult	bundle/ultisnips/test.py	/^class FOSimple_Break_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExceptCorrectResult	bundle/ultisnips/test.py	/^class FOTextAfter_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExceptCorrectResult	bundle/ultisnips/test.py	/^class FOTextBeforeAndAfter_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExceptCorrectResult	bundle/ultisnips/test.py	/^class FOWrapOnLongWord_ExceptCorrectResult(_FormatoptionsBase):$/;"	c
FUF_BUF_NAME	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:FUF_BUF_NAME = '[fuf]'$/;"	v
Fgrep_Path	bundle/grep/plugin/grep.vim	/^    let Fgrep_Path = 'fgrep'$/;"	v
Filename	bundle/ultisnips/plugin/snipMate_compatibility.vim	/^fun! Filename(...)$/;"	f
Filetype	bundle/tcomment/autoload/tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
FoldOverwrite_Simple_ECR	bundle/ultisnips/test.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
FoldingEnabled_SnippetWithFold_ExpectNoFolding	bundle/ultisnips/test.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
FufGlobal	bundle/fuzzyfinder/autoload/fuf.vim	/^augroup FufGlobal$/;"	a
FufLocal	bundle/fuzzyfinder/autoload/fuf.vim	/^  augroup FufLocal$/;"	a
GROUP0	bundle/autocomplete/autoload/acp.vim	/^let s:GROUP0 = 0$/;"	v
GROUP1	bundle/autocomplete/autoload/acp.vim	/^let s:GROUP1 = 1$/;"	v
GetArrayBeg	indent/javascript.vim	/^function! s:GetArrayBeg(lnum)$/;"	f
GetCommentDefinition	bundle/tcomment/autoload/tcomment.vim	/^function! s:GetCommentDefinition(beg, end, commentMode, ...)$/;"	f
GetCommentDefinitionForType	bundle/tcomment/autoload/tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, commentMode, filetype) "{{{3$/;"	f
GetCommentReplace	bundle/tcomment/autoload/tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetContinuationBegin	indent/javascript.vim	/^function! s:GetContinuationBegin(lnum) $/;"	f
GetCustomCommentString	bundle/tcomment/autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetIndentString	bundle/tcomment/autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetJsIndent	indent/javascript.vim	/^function! GetJsIndent(lnum)$/;"	f
GetNonCommentLine	indent/javascript.vim	/^function! s:GetNonCommentLine(lnum)$/;"	f
GetObjectBeg	indent/javascript.vim	/^function! s:GetObjectBeg(lnum)$/;"	f
GetParenBeg	indent/javascript.vim	/^function! s:GetParenBeg(lnum)$/;"	f
GetStartEnd	bundle/tcomment/autoload/tcomment.vim	/^function! s:GetStartEnd(beg, end, commentMode) "{{{3$/;"	f
GetSyntaxName	bundle/tcomment/autoload/tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetVimCmdOutput	bundle/visualmark/visualmark.vim	/^fun! s:GetVimCmdOutput(cmd)$/;"	f
GoWinbufnr	bundle/align/plugin/cecutil.vim	/^fun! GoWinbufnr(bufnum)$/;"	f
Grep_Cygwin_Find	bundle/grep/plugin/grep.vim	/^    let Grep_Cygwin_Find = 0$/;"	v
Grep_Default_Filelist	bundle/grep/plugin/grep.vim	/^    let Grep_Default_Filelist = '*'$/;"	v
Grep_Default_Options	bundle/grep/plugin/grep.vim	/^    let Grep_Default_Options = ''$/;"	v
Grep_Find_Path	bundle/grep/plugin/grep.vim	/^    let Grep_Find_Path = 'find'$/;"	v
Grep_Find_Use_Xargs	bundle/grep/plugin/grep.vim	/^    let Grep_Find_Use_Xargs = 1$/;"	v
Grep_Null_Device	bundle/grep/plugin/grep.vim	/^        let Grep_Null_Device = 'NUL'$/;"	v
Grep_Null_Device	bundle/grep/plugin/grep.vim	/^        let Grep_Null_Device = '\/dev\/null'$/;"	v
Grep_OpenQuickfixWindow	bundle/grep/plugin/grep.vim	/^    let Grep_OpenQuickfixWindow = 1$/;"	v
Grep_Path	bundle/grep/plugin/grep.vim	/^    let Grep_Path = 'grep'$/;"	v
Grep_Shell_Escape_Char	bundle/grep/plugin/grep.vim	/^        let Grep_Shell_Escape_Char = ''$/;"	v
Grep_Shell_Escape_Char	bundle/grep/plugin/grep.vim	/^        let Grep_Shell_Escape_Char = '\\'$/;"	v
Grep_Shell_Quote_Char	bundle/grep/plugin/grep.vim	/^        let Grep_Shell_Quote_Char = "'"$/;"	v
Grep_Shell_Quote_Char	bundle/grep/plugin/grep.vim	/^        let Grep_Shell_Quote_Char = ''$/;"	v
Grep_Skip_Dirs	bundle/grep/plugin/grep.vim	/^    let Grep_Skip_Dirs = 'RCS CVS SCCS'$/;"	v
Grep_Skip_Files	bundle/grep/plugin/grep.vim	/^    let Grep_Skip_Files = '*~ *,v s.*'$/;"	v
Grep_Xargs_Options	bundle/grep/plugin/grep.vim	/^    let Grep_Xargs_Options = '--null'$/;"	v
Grep_Xargs_Path	bundle/grep/plugin/grep.vim	/^    let Grep_Xargs_Path = 'xargs'$/;"	v
GuessCurrentCommentString	bundle/tcomment/autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	bundle/tcomment/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
HARD_DIVIDER	bundle/powerline/autoload/Pl/Parser.vim	/^let s:HARD_DIVIDER = 0$/;"	v
HTMLEvents	test/a.js	/^		HTMLEvents: ["bubbles", "cancelable"],$/;"	r
HlCreate	bundle/powerline/autoload/Pl/Parser.vim	/^function! s:HlCreate(hl) " {{{$/;"	f
HlExists	bundle/powerline/autoload/Pl/Parser.vim	/^function! s:HlExists(hl) " {{{$/;"	f
ID	test/a.js	/^			ID: function(a) {$/;"	r
ID	test/a.js	/^			ID: function(a, b) {$/;"	r
ID	test/a.js	/^			ID: function(a, b, c) {$/;"	r
IMMoving_AcceptInputWhenMoved_ECR	bundle/ultisnips/test.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	bundle/ultisnips/test.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	bundle/ultisnips/test.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	bundle/ultisnips/test.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	bundle/ultisnips/test.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	bundle/ultisnips/test.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
IndentUtil	bundle/ultisnips/plugin/UltiSnips/util.py	/^class IndentUtil(object):$/;"	c
IsArrayBeg	indent/javascript.vim	/^function! s:IsArrayBeg(line)$/;"	f
IsArrayEnd	indent/javascript.vim	/^function! s:IsArrayEnd(line)$/;"	f
IsComment	indent/javascript.vim	/^function! s:IsComment(lnum)$/;"	f
IsContinuationLine	indent/javascript.vim	/^function! s:IsContinuationLine(line)$/;"	f
IsControlBeg	indent/javascript.vim	/^function! s:IsControlBeg(line)$/;"	f
IsControlEnd	indent/javascript.vim	/^function! s:IsControlEnd(line)$/;"	f
IsControlMid	indent/javascript.vim	/^function! s:IsControlMid(line)$/;"	f
IsControlMidStrict	indent/javascript.vim	/^function! s:IsControlMidStrict(line)$/;"	f
IsInComment	indent/javascript.vim	/^function! s:IsInComment(lnum, cnum)$/;"	f
IsObjectBeg	indent/javascript.vim	/^function! s:IsObjectBeg(line)$/;"	f
IsObjectEnd	indent/javascript.vim	/^function! s:IsObjectEnd(line)$/;"	f
IsParenBeg	indent/javascript.vim	/^function! s:IsParenBeg(line)$/;"	f
IsParenEnd	indent/javascript.vim	/^function! s:IsParenEnd(line)$/;"	f
IsSwitchBeginNextLine	indent/javascript.vim	/^function! s:IsSwitchBeginNextLine(line) $/;"	f
IsSwitchBeginSameLine	indent/javascript.vim	/^function! s:IsSwitchBeginSameLine(line) $/;"	f
IsSwitchMid	indent/javascript.vim	/^function! s:IsSwitchMid(line)$/;"	f
Jsbeautify	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! g:Jsbeautify()$/;"	f
JumpForward_DefSnippet	bundle/ultisnips/test.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
KeyEvents	test/a.js	/^		KeyEvents: ["bubbles", "cancelable", "view", "ctrlKey", "altKey", "shiftKey", "metaKey", "keyCode", "charCode"],$/;"	r
L9TempBuffer	bundle/l9/autoload/l9/tempbuffer.vim	/^  augroup L9TempBuffer$/;"	a
L9_VERSION_CURRENT	bundle/l9/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
L9_VERSION_PASSABLE	bundle/l9/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
LEFT_SIDE	bundle/powerline/autoload/Pl/Parser.vim	/^let s:LEFT_SIDE = 0$/;"	v
ListAllAvailable_BraceInFront_ExceptCorrectResult	bundle/ultisnips/test.py	/^class ListAllAvailable_BraceInFront_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExceptionShouldBeRaised	bundle/ultisnips/test.py	/^class ListAllAvailable_NonDefined_NoExceptionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExceptCorrectResult	bundle/ultisnips/test.py	/^class ListAllAvailable_NothingTyped_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExceptCorrectResult	bundle/ultisnips/test.py	/^class ListAllAvailable_SpaceInFront_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExceptCorrectResult	bundle/ultisnips/test.py	/^class ListAllAvailable_testtypedSecondOpt_ExceptCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExceptCorrectResult	bundle/ultisnips/test.py	/^class ListAllAvailable_testtyped_ExceptCorrectResult(_ListAllSnippets):$/;"	c
Log	indent/javascript.vim	/^function! s:Log(msg)$/;"	f
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/file.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/help.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MODE_NAME	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
MakeSpace	bundle/align/autoload/Align.vim	/^fun! s:MakeSpace(spacecnt)$/;"	f
MatchIsTooCheap	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
Mirror	bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MirrorBeforeTabstopLeave_ExceptCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MirrorBeforeTabstopOverwrite_ExceptCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MirrorRealLifeExample_ExceptCorrectResult(_VimTest):$/;"	c
MirrorToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	bundle/ultisnips/test.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	bundle/ultisnips/test.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
MouseEvents	test/a.js	/^		MouseEvents: ["bubbles", "cancelable", "view", "detail", "screenX", "screenY", "clientX", "clientY", "ctrlKey", "altKey", "shiftKey", "metaKey", "button", "relatedTarget"],$/;"	r
MovePosition_DelSameLine	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MultiLine	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	bundle/ultisnips/test.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	bundle/ultisnips/test.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	bundle/ultisnips/test.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	bundle/ultisnips/test.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand($/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
MultiWord_SnippetOptions_OverwriteExisting_ECR	bundle/ultisnips/test.py	/^class MultiWord_SnippetOptions_OverwriteExisting_ECR(_VimTest):$/;"	c
MultilineExpandTestTyping_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MultilineExpandTestTyping_ExceptCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MultilineExpand_ExceptCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExceptCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExceptCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExceptCorrectResult	bundle/ultisnips/test.py	/^class MultilineTabStopSimpleMirrorMultiline_ExceptCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	bundle/ultisnips/test.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	bundle/ultisnips/test.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	bundle/ultisnips/test.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
NAME	test/a.js	/^			NAME: function(a, b) {$/;"	r
No_Tab_Expand_ET	bundle/ultisnips/test.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	bundle/ultisnips/test.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	bundle/ultisnips/test.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	bundle/ultisnips/test.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	bundle/ultisnips/test.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	bundle/ultisnips/test.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	bundle/ultisnips/test.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	bundle/ultisnips/test.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld,_VimTest):$/;"	c
No_Tab_Expand_Simple	bundle/ultisnips/test.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NoneditableTextObject	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^class NoneditableTextObject(TextObject):$/;"	c
OPEN_TYPE_CURRENT	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_CURRENT = 1$/;"	v
OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
OPEN_TYPE_DELETE	bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
OPEN_TYPE_EXPAND	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:OPEN_TYPE_EXPAND = -1$/;"	v
OPEN_TYPE_SPLIT	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_SPLIT   = 2$/;"	v
OPEN_TYPE_TAB	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_TAB     = 4$/;"	v
OPEN_TYPE_VSPLIT	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:OPEN_TYPE_VSPLIT  = 3$/;"	v
PADDING	bundle/powerline/autoload/Pl/Parser.vim	/^let s:PADDING = 1$/;"	v
POS	test/a.js	/^			POS: function(a) {$/;"	r
POS	test/a.js	/^			POS: function(a, b, c, d) {$/;"	r
PSEUDO	test/a.js	/^			PSEUDO: function(a, b, c, d) {$/;"	r
PSEUDO	test/a.js	/^			PSEUDO: function(b, c, d, e, f) {$/;"	r
ParseArgs	bundle/tcomment/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, commentMode, arglist) "{{{3$/;"	f
ParseSegments	bundle/powerline/autoload/Pl/Parser.vim	/^function! s:ParseSegments(mode, side, segments, ...) " {{{$/;"	f
ParseSnippets_ClearAll	bundle/ultisnips/test.py	/^class ParseSnippets_ClearAll(_PS_Base):$/;"	c
ParseSnippets_ClearOne	bundle/ultisnips/test.py	/^class ParseSnippets_ClearOne(_PS_Base):$/;"	c
ParseSnippets_ClearTwo	bundle/ultisnips/test.py	/^class ParseSnippets_ClearTwo(_PS_Base):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	bundle/ultisnips/test.py	/^class ParseSnippets_ExtendsWithoutFiletype(_PS_Base):$/;"	c
ParseSnippets_Global_Local_Python	bundle/ultisnips/test.py	/^class ParseSnippets_Global_Local_Python(_PS_Base):$/;"	c
ParseSnippets_Global_Python	bundle/ultisnips/test.py	/^class ParseSnippets_Global_Python(_PS_Base):$/;"	c
ParseSnippets_MissingEndSnippet	bundle/ultisnips/test.py	/^class ParseSnippets_MissingEndSnippet(_PS_Base):$/;"	c
ParseSnippets_MultiWord_Description	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_NoContainer(_PS_Base):$/;"	c
ParseSnippets_MultiWord_Quotes	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Quotes(_PS_Base):$/;"	c
ParseSnippets_MultiWord_RE1	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_PS_Base):$/;"	c
ParseSnippets_MultiWord_WithQuotes	bundle/ultisnips/test.py	/^class ParseSnippets_MultiWord_WithQuotes(_PS_Base):$/;"	c
ParseSnippets_SimpleSnippet	bundle/ultisnips/test.py	/^class ParseSnippets_SimpleSnippet(_PS_Base):$/;"	c
ParseSnippets_UnknownDirective	bundle/ultisnips/test.py	/^class ParseSnippets_UnknownDirective(_PS_Base):$/;"	c
PerlSyntaxFold	bundle/ultisnips/test.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
Pl	bundle/powerline/autoload/Pl.vim	/^	function! Pl#ClearCache() " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl.vim	/^	function! Pl#Load() " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl.vim	/^	function! Pl#LoadCache() " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl.vim	/^	function! Pl#ReloadColorscheme() " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl.vim	/^	function! Pl#Statusline(statusline, current) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl.vim	/^	function! Pl#StatuslineCallback(statusline, args) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl.vim	/^	function! Pl#UpdateStatusline(current) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl.vim	/^	let g:Pl#HL = []$/;"	v
Pl	bundle/powerline/autoload/Pl.vim	/^	let g:Pl#OLD_STL = ''$/;"	v
Pl	bundle/powerline/autoload/Pl.vim	/^	let g:Pl#THEME = []$/;"	v
Pl	bundle/powerline/autoload/Pl.vim	/^	let g:Pl#THEME_CALLBACKS = []$/;"	v
Pl	bundle/powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Apply(colorscheme, buffer_segments) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Colorscheme.vim	/^function! Pl#Colorscheme#Init(hi) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Allocate(colors) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Hi.vim	/^function! Pl#Hi#Segments(segments, mode_colors) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Add(pat, expr) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Any(...) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Match.vim	/^function! Pl#Match#Validate(theme) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#AddSegmentMod(action, properties) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Mod.vim	/^function! Pl#Mod#ApplySegmentMods(theme) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].dividers = g:Powerline_dividers_override$/;"	v
Pl	bundle/powerline/autoload/Pl/Parser.vim	/^	let g:Pl#Parser#Symbols[g:Powerline_symbols].symbols[s:key] = s:value$/;"	v
Pl	bundle/powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#GetStatusline(segments) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Parser.vim	/^function! Pl#Parser#ParseChars(arg) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Parser.vim	/^let g:Pl#Parser#Symbols = {$/;"	v
Pl	bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Create(name, ...) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Get(name) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Init(params) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Modes(modes) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#NoPadding() " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Split(...) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Segment.vim	/^function! Pl#Segment#Truncate() " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Buffer(ns, ...) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Callback(name, expr) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#Create(...) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#InsertSegment(new_segment, where, target_segment) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#RemoveSegment(target_segment) " {{{$/;"	f
Pl	bundle/powerline/autoload/Pl/Theme.vim	/^function! Pl#Theme#ReplaceSegment(old_segment, new_segment) " {{{$/;"	f
Position	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^class Position(object):$/;"	c
Powerline	bundle/powerline/autoload/Powerline/Colorschemes/default.vim	/^let g:Powerline#Colorschemes#default#colorscheme = Pl#Colorscheme#Init([$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Colorschemes/solarized.vim	/^let g:Powerline#Colorschemes#solarized#colorscheme = Pl#Colorscheme#Init([$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Colorschemes/solarized16.vim	/^let g:Powerline#Colorschemes#solarized16#colorscheme= Pl#Colorscheme#Init([$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Colorschemes/solarized256.vim	/^let g:Powerline#Colorschemes#solarized256#colorscheme = Pl#Colorscheme#Init([$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetCharCode() " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilepath() " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetFilesize() " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetMode() " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetShortPath(threshold) " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions.vim	/^function! Powerline#Functions#GetWSMarker() " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions/ft_man.vim	/^function! Powerline#Functions#ft_man#GetName() " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions/fugitive.vim	/^function! Powerline#Functions#fugitive#GetBranch(symbol) " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions/hgrev.vim	/^function! Powerline#Functions#hgrev#Status(symbol) " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Functions/syntastic.vim	/^function! Powerline#Functions#syntastic#GetErrors(line_symbol) " {{{$/;"	f
Powerline	bundle/powerline/autoload/Powerline/Matches.vim	/^let g:Powerline#Matches#matches = {$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Segments.vim	/^let g:Powerline#Segments#segments = Pl#Segment#Init([$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Segments/ft_man.vim	/^let g:Powerline#Segments#ft_man#segments = Pl#Segment#Init(['ft_man',$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Segments/fugitive.vim	/^let g:Powerline#Segments#fugitive#segments = Pl#Segment#Init(['fugitive',$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Segments/hgrev.vim	/^let g:Powerline#Segments#hgrev#segments = Pl#Segment#Init(['hgrev',$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Segments/rvm.vim	/^let g:Powerline#Segments#rvm#segments = Pl#Segment#Init(['rvm',$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Segments/syntastic.vim	/^let g:Powerline#Segments#syntastic#segments = Pl#Segment#Init(['syntastic',$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Segments/virtualenv.vim	/^let g:Powerline#Segments#virtualenv#segments = Pl#Segment#Init(['virtualenv',$/;"	v
Powerline	bundle/powerline/autoload/Powerline/Themes/default.vim	/^let g:Powerline#Themes#default#theme = Pl#Theme#Create($/;"	v
Powerline	bundle/powerline/autoload/Powerline/Themes/solarized16.vim	/^let g:Powerline#Themes#solarized16#theme = Pl#Theme#Create($/;"	v
Powerline	bundle/powerline/autoload/Powerline/Themes/solarized256.vim	/^let g:Powerline#Themes#solarized256#theme = Pl#Theme#Create($/;"	v
PowerlineMain	bundle/powerline/plugin/Powerline.vim	/^		augroup PowerlineMain$/;"	a
PowerlineStartup	bundle/powerline/plugin/Powerline.vim	/^	augroup PowerlineStartup$/;"	a
Powerline_cache_dir	bundle/powerline/plugin/Powerline.vim	/^		let g:Powerline_cache_dir = simplify(expand('<sfile>:p:h') .'\/..')$/;"	v
Powerline_loaded	bundle/powerline/plugin/Powerline.vim	/^	let g:Powerline_loaded = 1$/;"	v
ProcessedLine	bundle/tcomment/autoload/tcomment.vim	/^function! s:ProcessedLine(uncomment, match, checkRx, replace)$/;"	f
ProperIndenting_AutoIndentAndNewline_ECR	bundle/ultisnips/test.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	bundle/ultisnips/test.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	bundle/ultisnips/test.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
PythonCode	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	bundle/ultisnips/test.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	bundle/ultisnips/test.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	bundle/ultisnips/test.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	bundle/ultisnips/test.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	bundle/ultisnips/test.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	bundle/ultisnips/test.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	bundle/ultisnips/test.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_IndentEtSw	bundle/ultisnips/test.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	bundle/ultisnips/test.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	bundle/ultisnips/test.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	bundle/ultisnips/test.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	bundle/ultisnips/test.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	bundle/ultisnips/test.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	bundle/ultisnips/test.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	bundle/ultisnips/test.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	bundle/ultisnips/test.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	bundle/ultisnips/test.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	bundle/ultisnips/test.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	bundle/ultisnips/test.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	bundle/ultisnips/test.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	bundle/ultisnips/test.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	bundle/ultisnips/test.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	bundle/ultisnips/test.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	bundle/ultisnips/test.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	bundle/ultisnips/test.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	bundle/ultisnips/test.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	bundle/ultisnips/test.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	bundle/ultisnips/test.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	bundle/ultisnips/test.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	bundle/ultisnips/test.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	bundle/ultisnips/test.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	bundle/ultisnips/test.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	bundle/ultisnips/test.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	bundle/ultisnips/test.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
QArgSplitter	bundle/align/autoload/Align.vim	/^fun! s:QArgSplitter(qarg)$/;"	f
QArgSplitter	bundle/align/plugin/cecutil.vim	/^fun! QArgSplitter(qarg)$/;"	f
RIGHT_SIDE	bundle/powerline/autoload/Pl/Parser.vim	/^let s:RIGHT_SIDE = 2$/;"	v
RecTabStopsWithExpandtab_SimpleExample_ECR	bundle/ultisnips/test.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	bundle/ultisnips/test.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	bundle/ultisnips/test.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	bundle/ultisnips/test.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	bundle/ultisnips/test.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	bundle/ultisnips/test.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExceptCorrectResult	bundle/ultisnips/test.py	/^class RecTabStops_InNewlineInTabstop_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	bundle/ultisnips/test.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	bundle/ultisnips/test.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	bundle/ultisnips/test.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	bundle/ultisnips/test.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	bundle/ultisnips/test.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	bundle/ultisnips/test.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExceptCorrectResult	bundle/ultisnips/test.py	/^class RecTabStops_NotAtBeginningOfTS_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	bundle/ultisnips/test.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	bundle/ultisnips/test.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExceptCorrectResult	bundle/ultisnips/test.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExceptCorrectResult	bundle/ultisnips/test.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExceptCorrectResult	bundle/ultisnips/test.py	/^class RecTabStops_SimpleCase_ExceptCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	bundle/ultisnips/test.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	bundle/ultisnips/test.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	bundle/ultisnips/test.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	bundle/ultisnips/test.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
RepeatCommentstring	bundle/tcomment/autoload/tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
ReplaceInLine	bundle/tcomment/autoload/tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
RestoreMark	bundle/align/plugin/cecutil.vim	/^fun! RestoreMark(markname)$/;"	f
RestoreUserMaps	bundle/align/plugin/cecutil.vim	/^fun! RestoreUserMaps(suffix)$/;"	f
RestoreWinPosn	bundle/align/plugin/cecutil.vim	/^fun! RestoreWinPosn(...)$/;"	f
RunGrep	bundle/grep/plugin/grep.vim	/^function! s:RunGrep(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepCmd	bundle/grep/plugin/grep.vim	/^function! s:RunGrepCmd(cmd, pattern, action)$/;"	f
RunGrepRecursive	bundle/grep/plugin/grep.vim	/^function! s:RunGrepRecursive(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepSpecial	bundle/grep/plugin/grep.vim	/^function! s:RunGrepSpecial(cmd_name, which, action, ...)$/;"	f
SOFT_DIVIDER	bundle/powerline/autoload/Pl/Parser.vim	/^let s:SOFT_DIVIDER = 1$/;"	v
SaveMark	bundle/align/plugin/cecutil.vim	/^fun! SaveMark(markname)$/;"	f
SaveUserMaps	bundle/align/plugin/cecutil.vim	/^fun! SaveUserMaps(mapmode,maplead,mapchx,suffix)$/;"	f
SaveWinPosn	bundle/align/plugin/cecutil.vim	/^fun! SaveWinPosn(...)$/;"	f
SearchForPair	indent/javascript.vim	/^function! s:SearchForPair(lnum, beg, end)$/;"	f
SelectModeMappings_BufferLocalMappings_ECR	bundle/ultisnips/test.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	bundle/ultisnips/test.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	bundle/ultisnips/test.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	bundle/ultisnips/test.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	bundle/ultisnips/test.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	bundle/ultisnips/test.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
ShellCode	bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class ShellCodeToken(Token):$/;"	c
SimpleExpandEndingWithNewline_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleExpandEndingWithNewline_ExceptCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleExpandNewLineAndBackspae_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleExpandTwice_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleExpandTypeAfterExpand_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleExpandTypeAndDelete_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleExpand_ExceptCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleMirrorDeleteSomeEnterSome_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleMirrorDelete_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleMirrorMultilineMany_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	bundle/ultisnips/test.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	bundle/ultisnips/test.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleMirrorSameLineManyMultiline_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleMirrorSameLineMany_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleMirrorSameLine_ExceptCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleMirrorSameLine_InText_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultComplexKeep_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultComplexType_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExceptCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExceptCorrectResult	bundle/ultisnips/test.py	/^class SimpleTabstopWithDefaultSimpelType_ExceptCorrectResult(_VimTest):$/;"	c
Snippet	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class Snippet(object):$/;"	c
SnippetInstance	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class SnippetManager(object):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix2($/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandWordSnippets_ExpandSuffix3($/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand($/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	bundle/ultisnips/test.py	/^class SnippetOptions_ExpandWordSnippets_NormalExpand($/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	bundle/ultisnips/test.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_OverwriteExisting_ECR	bundle/ultisnips/test.py	/^class SnippetOptions_OverwriteExisting_ECR(_VimTest):$/;"	c
SnippetOptions_OverwriteThenChoose_ECR	bundle/ultisnips/test.py	/^class SnippetOptions_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetOptions_OverwriteTwice_ECR	bundle/ultisnips/test.py	/^class SnippetOptions_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	bundle/ultisnips/test.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetUtil	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^class SnippetUtil(object):$/;"	c
Snippet_With_DoubleQuote	bundle/ultisnips/test.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	bundle/ultisnips/test.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	bundle/ultisnips/test.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	bundle/ultisnips/test.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	bundle/ultisnips/test.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
StartColRx	bundle/tcomment/autoload/tcomment.vim	/^function! s:StartColRx(pos)$/;"	f
StartLineRx	bundle/tcomment/autoload/tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	bundle/tcomment/autoload/tcomment.vim	/^function! s:StartPosRx(mode, line, col)$/;"	f
Strlen	bundle/align/autoload/Align.vim	/^fun! s:Strlen(x)$/;"	f
TAG	test/a.js	/^			TAG: function(a, b) {$/;"	r
TEMP_VARIABLES_GROUP	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
TEMP_VARIABLES_GROUP	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
TOParser	bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^class TOParser(object):$/;"	c
TabStop	bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	bundle/ultisnips/test.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	bundle/ultisnips/test.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	bundle/ultisnips/test.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopNavigatingInInsertModeSimple_ExceptCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopNoReplace_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopSimpleReplaceReversed_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopSimpleReplaceSurrounded1_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopSimpleReplaceSurrounded_ExceptCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopSimpleReplace_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopTestBackwardJumping2_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopTestBackwardJumping_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopTestJumping2_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopTestJumping_ExceptCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopTestMultilineExpand_ExceptCorrectResult(_VimTest):$/;"	c
TabStopToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStopWithOneChar_ExceptCorrectResult(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	bundle/ultisnips/test.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	bundle/ultisnips/test.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	bundle/ultisnips/test.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	bundle/ultisnips/test.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabStop_Exit_ExceptCorrectResult(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	bundle/ultisnips/test.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	bundle/ultisnips/test.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	bundle/ultisnips/test.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	bundle/ultisnips/test.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	bundle/ultisnips/test.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	bundle/ultisnips/test.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	bundle/ultisnips/test.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	bundle/ultisnips/test.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	bundle/ultisnips/test.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	bundle/ultisnips/test.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	bundle/ultisnips/test.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	bundle/ultisnips/test.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	bundle/ultisnips/test.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	bundle/ultisnips/test.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	bundle/ultisnips/test.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleLeave_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultNoType1_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultNoType_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultOverwrite_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExceptCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TabstopWithMirrorManyFromAll_ExceptCorrectResult(_VimTest):$/;"	c
TestAllMatch	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestCheapDelete	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestGuessing_BackspaceOneChar	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TestLangmapWithUtf8_ExceptCorrectResult(_VimTest):$/;"	c
TestLotsaNewlines	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestNoSubstring	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TestNonEmptyLangmapWithSemi_ExceptCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TestNonEmptyLangmap_ExceptCorrectResult(_VimTest):$/;"	c
TestRealLife	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestUltiSnipsProblem	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
TextObject	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^class TextObject(object):$/;"	c
TextObjectTransformation	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^class TextObjectTransformation(object):$/;"	c
TextTabStopAfterMirror_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopAfterMirror_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopAllSurrounded_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	bundle/ultisnips/test.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopSimpleMirrorMultiline_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopSurroundMirror_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopTextAfterTab_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopTextBeforeMirror_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopTextBeforeTab_ExceptCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExceptCorrectResult	bundle/ultisnips/test.py	/^class TextTabStopTextSurroundedTab_ExceptCorrectResult(_VimTest):$/;"	c
Token	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class Token(object):$/;"	c
TrailingNewline_TabStop_EndNL	bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	bundle/ultisnips/test.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
Transformation	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	bundle/ultisnips/test.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_BackreferenceTwice_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_Backreference_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_CIBothDefinedNegative_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_CIBothDefinedPositive_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	bundle/ultisnips/test.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	bundle/ultisnips/test.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	bundle/ultisnips/test.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_CleverTransformLongLower_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_CleverTransformLongUpper_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_CleverTransformLowercaseChar_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_CleverTransformUpercaseChar_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	bundle/ultisnips/test.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	bundle/ultisnips/test.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_ConditionalInsertionSimple_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	bundle/ultisnips/test.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	bundle/ultisnips/test.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	bundle/ultisnips/test.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	bundle/ultisnips/test.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	bundle/ultisnips/test.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	bundle/ultisnips/test.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_SimpleCaseNoTransform_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	bundle/ultisnips/test.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_SimpleCaseTransformInFront_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExceptCorrectResult	bundle/ultisnips/test.py	/^class Transformation_SimpleCase_ExceptCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	bundle/ultisnips/test.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	bundle/ultisnips/test.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
UIEvents	test/a.js	/^		UIEvents: ["bubbles", "cancelable", "view", "detail"],$/;"	r
UltiSnipsAddFiletypes	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnipsAddFiletypes(filetypes)$/;"	f
UltiSnipsEdit	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnipsEdit(...)$/;"	f
UltiSnipsEditSplit	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
UltiSnipsExpandTrigger	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
UltiSnipsJumpBackwardTrigger	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
UltiSnipsJumpForwardTrigger	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
UltiSnipsListSnippets	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
UltiSnipsMappingsToIgnore	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
UltiSnipsRemoveSelectModeMappings	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
UltiSnipsSnippetDirectories	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
UltiSnipsUsePythonVersion	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:UltiSnipsUsePythonVersion = "<tab>"$/;"	v
UltiSnips_AddSnippet	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_AddSnippet(trigger, value, descr, options, ...)$/;"	f
UltiSnips_Anon	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_Anon(value, ...)$/;"	f
UltiSnips_CursorMoved	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_CursorMoved()$/;"	f
UltiSnips_EnteredInsertMode	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_EnteredInsertMode()$/;"	f
UltiSnips_ExpandSnippet	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_ExpandSnippet()$/;"	f
UltiSnips_ExpandSnippetOrJump	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_ExpandSnippetOrJump()$/;"	f
UltiSnips_FileTypeChanged	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_FileTypeChanged()$/;"	f
UltiSnips_JumpBackwards	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_JumpBackwards()$/;"	f
UltiSnips_JumpForwards	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_JumpForwards()$/;"	f
UltiSnips_LeavingBuffer	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_LeavingBuffer()$/;"	f
UltiSnips_ListSnippets	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_ListSnippets()$/;"	f
UltiSnips_MapKeys	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_MapKeys()$/;"	f
UltiSnips_SaveLastVisualSelection	bundle/ultisnips/plugin/UltiSnips.vim	/^function! UltiSnips_SaveLastVisualSelection()$/;"	f
Undo_RemoveEditInTabstop	bundle/ultisnips/test.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	bundle/ultisnips/test.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	bundle/ultisnips/test.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
UnknownVariable	bundle/ultisnips/utils/get_tm_snippets.py	/^class UnknownVariable(Exception):$/;"	c
UnreplaceInLine	bundle/tcomment/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
UnsupportedVariableExpression	bundle/ultisnips/utils/get_tm_snippets.py	/^class UnsupportedVariableExpression(Exception):$/;"	c
VERSION_FACTOR	bundle/l9/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
VimBuffer	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^class VimBuffer(object):$/;"	c
VimInterface	bundle/ultisnips/test.py	/^class VimInterface:$/;"	c
VimInterfaceScreen	bundle/ultisnips/test.py	/^class VimInterfaceScreen(VimInterface):$/;"	c
VimInterfaceWindows	bundle/ultisnips/test.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimState	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class VimState(object):$/;"	c
Visual	bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^class Visual(NoneditableTextObject,TextObjectTransformation):$/;"	c
VisualContentPreserver	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class VisualContentPreserver(object):$/;"	c
VisualToken	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	bundle/ultisnips/test.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	bundle/ultisnips/test.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	bundle/ultisnips/test.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	bundle/ultisnips/test.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	bundle/ultisnips/test.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	bundle/ultisnips/test.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	bundle/ultisnips/test.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	bundle/ultisnips/test.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	bundle/ultisnips/test.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	bundle/ultisnips/test.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	bundle/ultisnips/test.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	bundle/ultisnips/test.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	bundle/ultisnips/test.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	bundle/ultisnips/test.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	bundle/ultisnips/test.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	bundle/ultisnips/test.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	bundle/ultisnips/test.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	bundle/ultisnips/test.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	bundle/ultisnips/test.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_Simple	bundle/ultisnips/test.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	bundle/ultisnips/test.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	bundle/ultisnips/test.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	bundle/ultisnips/test.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	bundle/ultisnips/test.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	bundle/ultisnips/test.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	bundle/ultisnips/test.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	bundle/ultisnips/test.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	bundle/ultisnips/test.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
Vm_get_line_number	bundle/visualmark/visualmark.vim	/^fun! s:Vm_get_line_number(string)$/;"	f
Vm_get_next_sign_line	bundle/visualmark/visualmark.vim	/^fun! s:Vm_get_next_sign_line(curr_line_number)$/;"	f
Vm_get_prev_sign_line	bundle/visualmark/visualmark.vim	/^fun! s:Vm_get_prev_sign_line(curr_line_number)$/;"	f
Vm_get_sign_id_from_line	bundle/visualmark/visualmark.vim	/^fun! s:Vm_get_sign_id_from_line(line_number)$/;"	f
Vm_goto_next_sign	bundle/visualmark/visualmark.vim	/^fun! Vm_goto_next_sign()$/;"	f
Vm_goto_prev_sign	bundle/visualmark/visualmark.vim	/^fun! Vm_goto_prev_sign()$/;"	f
Vm_place_sign	bundle/visualmark/visualmark.vim	/^fun! s:Vm_place_sign()$/;"	f
Vm_remove_all_signs	bundle/visualmark/visualmark.vim	/^fun! s:Vm_remove_all_signs()$/;"	f
Vm_remove_sign	bundle/visualmark/visualmark.vim	/^fun! s:Vm_remove_sign(sign_id)$/;"	f
Vm_toggle_sign	bundle/visualmark/visualmark.vim	/^fun! Vm_toggle_sign()$/;"	f
Worker	bundle/l9/autoload/l9/async.py	/^class Worker(threading.Thread):$/;"	c
X	colors/jellybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
_AddFuncBase	bundle/ultisnips/test.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	bundle/ultisnips/test.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class _Base(object):$/;"	c
_BaseGuessing	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^class _BaseGuessing(object):$/;"	c
_CleverReplace	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^class _CleverReplace(object):$/;"	c
_Dummy_LangMapTranslator	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^class _Dummy_LangMapTranslator(object):$/;"	c
_ES_Base	bundle/ultisnips/test.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	bundle/ultisnips/test.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FormatoptionsBase	bundle/ultisnips/test.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_ListAllSnippets	bundle/ultisnips/test.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^class _MPBase(object):$/;"	c
_MultiLineDefault	bundle/ultisnips/test.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	bundle/ultisnips/test.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	bundle/ultisnips/test.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	bundle/ultisnips/test.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_PS_Base	bundle/ultisnips/test.py	/^class _PS_Base(_VimTest):$/;"	c
_ParseSnippets_MultiWord	bundle/ultisnips/test.py	/^class _ParseSnippets_MultiWord(_PS_Base):$/;"	c
_ParseSnippets_MultiWord_RE	bundle/ultisnips/test.py	/^class _ParseSnippets_MultiWord_RE(_PS_Base):$/;"	c
_Real_LangMapTranslator	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^class _Real_LangMapTranslator(object):$/;"	c
_Regex_Self	bundle/ultisnips/test.py	/^class _Regex_Self(_VimTest):$/;"	c
_SelectModeMappings	bundle/ultisnips/test.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	bundle/ultisnips/test.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetDictionary	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class _SnippetDictionary(object):$/;"	c
_SnippetOptions_ExpandWordSnippets	bundle/ultisnips/test.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetsFileParser	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class _SnippetsFileParser(object):$/;"	c
_TabExpand_RealWorld	bundle/ultisnips/test.py	/^class _TabExpand_RealWorld(object):$/;"	c
_Tabs	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^class _Tabs(object):$/;"	c
_TextIterator	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^class _TextIterator(object):$/;"	c
_UmlautsBase	bundle/ultisnips/test.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimPosition	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^class _VimPosition(Position):$/;"	c
_VimTest	bundle/ultisnips/test.py	/^class _VimTest(unittest.TestCase):$/;"	c
__add__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __add__(self,pos):$/;"	m	class:Position	file:
__add__	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__eq__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__getitem__	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__getitem__	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__getslice__	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBuffer	file:
__init__	bundle/l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Asyncer
__init__	bundle/l9/autoload/l9/async.py	/^    def __init__(self):$/;"	m	class:Worker
__init__	bundle/l9/autoload/l9/async.py	/^    def __init__(self, command, cwd, input, appends):$/;"	m	class:Executor
__init__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:SnippetManager
__init__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self):$/;"	m	class:_VimPosition
__init__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:_SnippetDictionary
__init__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self, ft, fn, snip_manager, file_data=None):$/;"	m	class:_SnippetsFileParser
__init__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __init__(self, trigger, value, descr, options, globals):$/;"	m	class:Snippet
__init__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __init__(self, parent, token, end = None, initial_text = "", tiebreaker = None):$/;"	m	class:TextObject
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def __init__(self, parent_to, text, indent):$/;"	m	class:TOParser
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, initial_indent, vmode, vtext):$/;"	m	class:SnippetUtil
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, parent, indent, initial_text, start, end, visual_content, last_re, globals):$/;"	m	class:SnippetInstance
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^    def __init__(self, parent, token, start = None, end = None):$/;"	m	class:TabStop
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, s):$/;"	m	class:_CleverReplace
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	bundle/ultisnips/plugin/UltiSnips/util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	bundle/ultisnips/test.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	bundle/ultisnips/test.py	/^    def __init__(self, session):$/;"	m	class:VimInterfaceScreen
__iter__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__le__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__le__	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__len__	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
__lshift__	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lt__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__lt__	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__ne__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def __repr__(self):$/;"	m	class:Snippet	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
__repr__	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
__rshift__	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__setitem__	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__setslice__	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBuffer	file:
__sub__	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def __sub__(self,pos):$/;"	m	class:Position	file:
_add_child	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _add_child(self,c):$/;"	m	class:EditableTextObject
_ask_snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _ask_snippets(self, snippets):$/;"	m	class:SnippetManager
_calc_end	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def _calc_end(lines, start):$/;"	f
_check_if_still_inside_snippet	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_child_has_moved	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_create_objects_with_links_to_tabs	bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def _create_objects_with_links_to_tabs(self, all_tokens, seen_ts):$/;"	m	class:TOParser
_create_translation	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def _create_translation(self, langmap):$/;"	m	class:_Real_LangMapTranslator
_cs	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _cs(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_del_child	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _del_child(self,c):$/;"	m	class:EditableTextObject
_do_edit	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _do_edit(self, cmd):$/;"	m	class:EditableTextObject
_do_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def _do_parse(self, all_tokens, seen_ts):$/;"	m	class:TOParser
_do_print	bundle/ultisnips/plugin/UltiSnips/debug.py	/^    def _do_print(to, indent=""):$/;"	f
_do_snippet	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _do_snippet(self, snippet, before, after):$/;"	m	class:SnippetManager
_editable_childs	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _editable_childs(self):$/;"	m	class:EditableTextObject
_ensure_all_loaded	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _ensure_all_loaded(self):$/;"	m	class:SnippetManager
_ensure_loaded	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _ensure_loaded(self, ft, checked=None):$/;"	m	class:SnippetManager
_error	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _error(self, msg):$/;"	m	class:SnippetManager
_error	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _error(self, msg):$/;"	m	class:_SnippetsFileParser
_find_closingbrace	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^        def _find_closingbrace(v,start_pos):$/;"	m	class:_CleverReplace
_find_recursive	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^        def _find_recursive(obj):$/;"	m	class:SnippetInstance
_find_snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _find_snippets(self, ft, trigger, potentially = False, seen=None):$/;"	m	class:SnippetManager
_get_next_tab	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _get_next_tab(self, no):$/;"	m	class:EditableTextObject
_get_prev_tab	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _get_prev_tab(self, no):$/;"	m	class:EditableTextObject
_get_tabstop	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:EditableTextObject
_get_tabstop	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_goto_next_line	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _goto_next_line(self):$/;"	m	class:_SnippetsFileParser
_handle_failure	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_hash	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _hash(self, path):$/;"	m	class:_SnippetDictionary
_jump	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _jump(self, backwards = False):$/;"	m	class:SnippetManager
_lcase_folding	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _lcase_folding(self, m):$/;"	m	class:_CleverReplace
_line	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line(self):$/;"	m	class:_SnippetsFileParser
_line_head	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line_head(self):$/;"	m	class:_SnippetsFileParser
_line_head_tail	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line_head_tail(self):$/;"	m	class:_SnippetsFileParser
_line_tail	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _line_tail(self):$/;"	m	class:_SnippetsFileParser
_load_snippets_for	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetManager
_move	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_needs_update	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetManager
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:CursorMovement_BS_InEditMode
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET_SW
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_No_TS
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:No_Tab_Expand_RealWorld
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PerlSyntaxFold
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_IndentEtSw
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_IndentEtSwOffset
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_IndentNoetSwTs
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:PythonCode_OptExists
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExceptCorrectResult
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:TestLangmapWithUtf8_ExceptCorrectResult
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:TestNonEmptyLangmapWithSemi_ExceptCorrectResult
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:TestNonEmptyLangmap_ExceptCorrectResult
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_AnonBase
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_ES_Base
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_ExpandTabs
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_FormatoptionsBase
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_PS_Base
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_SelectModeMappings
_options_off	bundle/ultisnips/test.py	/^    def _options_off(self):$/;"	m	class:_VimTest
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:CursorMovement_BS_InEditMode
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET_SW
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_No_TS
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:No_Tab_Expand_RealWorld
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PerlSyntaxFold
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_IndentEtSw
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_IndentEtSwOffset
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_IndentNoetSwTs
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:PythonCode_OptExists
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExceptCorrectResult
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:TestLangmapWithUtf8_ExceptCorrectResult
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:TestNonEmptyLangmapWithSemi_ExceptCorrectResult
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:TestNonEmptyLangmap_ExceptCorrectResult
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_AddFuncBase
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_AnonBase
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_ES_Base
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_ExpandTabs
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_FormatoptionsBase
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_PS_Base
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_SelectModeMappings
_options_on	bundle/ultisnips/test.py	/^    def _options_on(self):$/;"	m	class:_VimTest
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EndOfTextToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_first	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _parse_first(self, line):$/;"	m	class:_SnippetsFileParser
_parse_number	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _parse_snippet(self):$/;"	m	class:_SnippetsFileParser
_parse_snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _parse_snippets(self, ft, fn, file_data=None):$/;"	m	class:SnippetManager
_parse_till_closing_brace	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_part_conditional	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^        def _part_conditional(v):$/;"	m	class:_CleverReplace
_place_initial_text	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^        def _place_initial_text(obj):$/;"	m	class:SnippetInstance
_re_match	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _re_match(self, trigger):$/;"	m	class:Snippet
_reinit	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_rejectChain	test/a.js	/^		_rejectChain: [],$/;"	r
_replace_conditional	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _replace_conditional(self, match, v):$/;"	m	class:_CleverReplace
_reset	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_resolveChain	test/a.js	/^		_resolveChain: [],$/;"	r
_resolve_ambiguity	bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def _resolve_ambiguity(self, all_tokens, seen_ts):$/;"	m	class:TOParser
_result	test/a.js	/^		_result: [],$/;"	r
_rv_changed	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_scase_folding	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _scase_folding(self, m):$/;"	m	class:_CleverReplace
_schar_escape	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _schar_escape(self, v):$/;"	m	class:_CleverReplace
_skip	bundle/ultisnips/test.py	/^    def _skip(self, reason):$/;"	m	class:_VimTest
_snip_quote	bundle/ultisnips/test.py	/^def _snip_quote(qt):$/;"	f
_snips	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _snips(self, before, possible):$/;"	m	class:SnippetManager
_targetsDroppingOver	test/a.js	/^	_targetsDroppingOver: {}$/;"	r
_transform	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _try_expand(self):$/;"	m	class:SnippetManager
_unescape	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def _unescape(self, v):$/;"	m	class:_CleverReplace
_unmap_select_mode_mapping	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _update(self, done, not_done):$/;"	m	class:EditableTextObject
_update	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def _update(self, done, not_done):$/;"	m	class:NoneditableTextObject
_update	bundle/ultisnips/plugin/UltiSnips/text_objects/_mirror.py	/^    def _update(self, done, not_done):$/;"	m	class:Mirror
_update	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def _update(self, done, not_done):$/;"	m	class:PythonCode
_update	bundle/ultisnips/plugin/UltiSnips/text_objects/_shell_code.py	/^    def _update(self, done, not_done):$/;"	m	class:ShellCode
_update	bundle/ultisnips/plugin/UltiSnips/text_objects/_viml_code.py	/^    def _update(self, done, not_done):$/;"	m	class:VimLCode
_update	bundle/ultisnips/plugin/UltiSnips/text_objects/_visual.py	/^    def _update(self, done, not_done):$/;"	m	class:Visual
_uspy	bundle/ultisnips/plugin/UltiSnips.vim	/^        let g:_uspy=":py "$/;"	v
_uspy	bundle/ultisnips/plugin/UltiSnips.vim	/^        let g:_uspy=":py3 "$/;"	v
_uspy	bundle/ultisnips/plugin/UltiSnips.vim	/^    let g:_uspy=":py3 "$/;"	v
_vim_dec	bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^def _vim_dec(s):$/;"	f
_vim_enc	bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^def _vim_enc(s):$/;"	f
_vim_line_with_eol	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^        def _vim_line_with_eol(ln):$/;"	m	class:VisualContentPreserver
_words_for_line	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def _words_for_line(self, before, num_words=None):$/;"	m	class:Snippet
a	test/a.js	/^				a = " " + a[1].replace(g, "") + " ";$/;"	r
a	test/a.js	/^			var a = {$/;"	r
a	test/a.js	/^		a = "on" + a;$/;"	r
a	test/a.js	/^		var a = {$/;"	r
a	test/a.js	/^	baidu.lang.isString(a) && (a = [{$/;"	r
a	test/a.js	/^	var a = function(a) {$/;"	r
a	test/a.js	/^	var a = {$/;"	r
a	test/a.js	/^	var a = {};$/;"	r
a	test/js.js	/^var a = "test";$/;"	r
a._baiduHTML	test/a.js	/^				} else a._baiduHTML = ""$/;"	r
a._resolveChain	test/a.js	/^			baidu.async._isDeferred(d) && (a._nextDeferred = d, [].push.apply(d._resolveChain, a._resolveChain), [].push.apply(d._rejectChain, a._rejectChain), b = a._resolveChain = [], a._rejectChain = [])$/;"	r
a.cancel	test/a.js	/^	a.cancel = function() {$/;"	r
a.classid	test/a.js	/^	a.classid = "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000",$/;"	r
a.codebase	test/a.js	/^	a.codebase = "http:\/\/fpdownload.macromedia.com\/pub\/shockwave\/cabs\/flash\/swflash.cab#version=6,0,0,0",$/;"	r
a.extend	test/a.js	/^	a.extend = function(b) {$/;"	r
a.fail	test/a.js	/^	a.fail = function(b) {$/;"	r
a.fireFail	test/a.js	/^	a.reject = a.fireFail = function(c) {$/;"	r
a.fireSuccess	test/a.js	/^	a.resolve = a.fireSuccess = function(c) {$/;"	r
a.height	test/a.js	/^			a.height = "35",$/;"	r
a.innerHTML	test/a.js	/^		a.innerHTML = "<a href='#'><\/a>",$/;"	r
a.innerHTML	test/a.js	/^		a.innerHTML = "<a name='" + b + "'\/>",$/;"	r
a.innerHTML	test/a.js	/^		a.innerHTML = "<div class='test e'><\/div><div class='test'><\/div>";$/;"	r
a.lastChild.className	test/a.js	/^		a.lastChild.className = "e";$/;"	r
a.pluginspage	test/a.js	/^	a.pluginspage = "http:\/\/www.macromedia.com\/go\/getflashplayer",$/;"	r
a.style.display	test/a.js	/^			a.style.display = "none",$/;"	r
a.style.display	test/a.js	/^	a.style.display = "",$/;"	r
a.style.display	test/a.js	/^	a.style.display = "none",$/;"	r
a.style.filter	test/a.js	/^	baidu.browser.ie ? a.style.filter = "progid:DXImageTransform.Microsoft.Alpha(opacity:" + Math.floor(b * 100) + ")": (a.style.opacity = b, a.style.KHTMLOpacity = b)$/;"	r
a.style.position	test/a.js	/^		a.style.position = "relative",$/;"	r
a.style.position	test/a.js	/^	a.style.position = "static"$/;"	r
a.success	test/a.js	/^	a.success = function(b) {$/;"	r
a.then	test/a.js	/^	a.then = function(c, d) {$/;"	r
a.type	test/a.js	/^	a.type = "application\/x-shockwave-flash",$/;"	r
a.width	test/a.js	/^			a.width = "35",$/;"	r
abbr	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let abbr = abbr[stridx(abbr, match) + len(match):]$/;"	v
activateFufBuffer	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:activateFufBuffer()$/;"	f
addRule	test/a.js	/^		addRule: function(a, b, c) {$/;"	r
addRule	test/a.js	/^	addRule: function(a, b) {$/;"	r
add_buffer_filetypes	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_buffer_filetypes(self, ft):$/;"	m	class:SnippetManager
add_extending_info	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_extending_info(self, ft, parents):$/;"	m	class:SnippetManager
add_snippet	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_snippet(self, s, fn=None):$/;"	m	class:_SnippetDictionary
add_snippet	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_snippet(self, trigger, value, descr, options, ft = "all", globals = None, fn=None):$/;"	m	class:SnippetManager
add_snippet_file	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def add_snippet_file(self, ft, path):$/;"	m	class:SnippetManager
addfile	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def addfile(self, path):$/;"	m	class:_SnippetDictionary
aliases	bundle/zencoding/autoload/zencoding.vim	/^    let aliases = zencoding#getResource(type, 'aliases', {})$/;"	v
aliases	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let aliases = zencoding#getResource(type, 'aliases', {})$/;"	v
allocated_colors	bundle/powerline/autoload/Pl/Hi.vim	/^let s:allocated_colors = {$/;"	v
amat	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let amat = matchstr(atts, '\\(\\w\\+\\%(="[^"]*"\\|=''[^'']*''\\|[^ ''"\\]]*\\)\\{0,1}\\)')$/;"	v
array_beg	indent/javascript.vim	/^let s:array_beg = '\\[[^\\]]*' . s:js_end_line_comment . '$'$/;"	v
array_end	indent/javascript.vim	/^let s:array_end = '^' . s:js_mid_line_comment . '[^\\[]*\\][;,]*' . s:js_end_line_comment . '$'$/;"	v
as_unicode	bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def as_unicode(s):$/;"	f
as_vimencoding	bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def as_vimencoding(s):$/;"	f
attr	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let attr = substitute(strpart(attr, len(item)), '^\\s*', '', '')$/;"	v
attr	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let attr = attributes$/;"	v
attrHandle	test/a.js	/^		attrHandle: {$/;"	r
attrMap	test/a.js	/^		attrMap: {$/;"	r
atts	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let atts = atts[stridx(atts, amat) + len(amat):]$/;"	v
atts	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let atts = item[1:-2]$/;"	v
b	test/a.js	/^			b = "#";$/;"	r
b	test/a.js	/^		b = "script" + (new Date).getTime(),$/;"	r
b	test/a.js	/^		b = [],$/;"	r
b	test/a.js	/^		b = [];$/;"	r
b	test/a.js	/^		b = {};$/;"	r
b	test/a.js	/^		var b = ["["],$/;"	r
b	test/a.js	/^	b = "sizcache" + (Math.random() + "").replace(".", ""),$/;"	r
b	test/a.js	/^	b = [];$/;"	r
b	test/a.js	/^	b = {$/;"	r
b	test/a.js	/^	for (var b = [], c = a.firstChild; c; c = c.nextSibling) c.nodeType == 1 && b.push(c);$/;"	r
b	test/a.js	/^	function b(a) {$/;"	r
b	test/a.js	/^	function b(b) {$/;"	r
b	test/a.js	/^	if (!b || typeof b != "function") b = function(a) {$/;"	r
b	test/a.js	/^	return a.style.removeProperty ? b = function(a, b) {$/;"	r
b	test/a.js	/^	var b = "",$/;"	r
b	test/a.js	/^	var b = [],$/;"	r
b	test/a.js	/^	var b = function() {$/;"	r
b.fillStyle	test/a.js	/^			b.fillStyle = "black",$/;"	r
b.font	test/a.js	/^			b.font = "32px Arial",$/;"	r
b.innerHTML	test/a.js	/^		b.innerHTML = "<p class='TEST'><\/p>";$/;"	r
b.innerHTML	test/a.js	/^		b.innerHTML = "mmmmmmmmml",$/;"	r
b.onabort	test/a.js	/^	b.onload = b.onerror = b.onabort = function() {$/;"	r
b.strokeStyle	test/a.js	/^			b.strokeStyle = "black",$/;"	r
b.textBaseline	test/a.js	/^			b.textBaseline = "top",$/;"	r
b[a]	test/a.js	/^		b.position == "static" ? b[a] = "": (d = baidu.getStyle(c, a), d == "auto" || d == "0px" ? b[a] = "": b[a] = d)$/;"	r
baidu.ajax.form	test/a.js	/^baidu.ajax.form = function(a, b) {$/;"	r
baidu.ajax.get	test/a.js	/^baidu.ajax.get = function(a, b) {$/;"	r
baidu.ajax.post	test/a.js	/^baidu.ajax.post = function(a, b, c) {$/;"	r
baidu.ajax.request	test/a.js	/^baidu.ajax.request = function(a, b) {$/;"	r
baidu.array.contains	test/a.js	/^baidu.array.contains = function(a, b) {$/;"	r
baidu.array.each	test/a.js	/^baidu.each = baidu.array.forEach = baidu.array.each = function(a, b, c) {$/;"	r
baidu.array.empty	test/a.js	/^baidu.array.empty = function(a) {$/;"	r
baidu.array.every	test/a.js	/^baidu.array.every = function(a, b, c) {$/;"	r
baidu.array.filter	test/a.js	/^baidu.array.filter = function(a, b, c) {$/;"	r
baidu.array.find	test/a.js	/^baidu.array.find = function(a, b) {$/;"	r
baidu.array.hash	test/a.js	/^baidu.array.hash = function(a, b) {$/;"	r
baidu.array.indexOf	test/a.js	/^baidu.array.indexOf = function(a, b, c) {$/;"	r
baidu.array.lastIndexOf	test/a.js	/^baidu.array.lastIndexOf = function(a, b, c) {$/;"	r
baidu.array.map	test/a.js	/^baidu.array.map = function(a, b, c) {$/;"	r
baidu.array.reduce	test/a.js	/^baidu.array.reduce = function(a, b, c) {$/;"	r
baidu.array.remove	test/a.js	/^baidu.array.remove = function(a, b) {$/;"	r
baidu.array.removeAt	test/a.js	/^baidu.array.removeAt = function(a, b) {$/;"	r
baidu.array.some	test/a.js	/^baidu.array.some = function(a, b, c) {$/;"	r
baidu.array.unique	test/a.js	/^baidu.array.unique = function(a, b) {$/;"	r
baidu.async.Deferred	test/a.js	/^baidu.async.Deferred = function() {$/;"	r
baidu.async._isDeferred	test/a.js	/^baidu.async._isDeferred = function(a) {$/;"	r
baidu.async.get	test/a.js	/^baidu.async.get = function(a) {$/;"	r
baidu.async.post	test/a.js	/^baidu.async.post = function(a, b) {$/;"	r
baidu.async.when	test/a.js	/^baidu.async.when = function(a, b, c) {$/;"	r
baidu.cookie._isValidKey	test/a.js	/^baidu.cookie._isValidKey = function(a) {$/;"	r
baidu.cookie.get	test/a.js	/^baidu.cookie.get = function(a) {$/;"	r
baidu.cookie.getRaw	test/a.js	/^baidu.cookie.getRaw = function(a) {$/;"	r
baidu.cookie.remove	test/a.js	/^baidu.cookie.remove = function(a, b) {$/;"	r
baidu.cookie.set	test/a.js	/^baidu.cookie.set = function(a, b, c) {$/;"	r
baidu.cookie.setRaw	test/a.js	/^baidu.cookie.setRaw = function(a, b, c) {$/;"	r
baidu.date.format	test/a.js	/^baidu.date.format = function(a, b) {$/;"	r
baidu.date.parse	test/a.js	/^baidu.date.parse = function(a) {$/;"	r
baidu.dom._NAME_ATTRS	test/a.js	/^baidu.dom._NAME_ATTRS = function() {$/;"	r
baidu.dom._g	test/a.js	/^baidu.dom._g = function(a) {$/;"	r
baidu.dom._matchNode	test/a.js	/^baidu.dom._matchNode = function(a, b, c) {$/;"	r
baidu.dom._styleFilter.filter	test/a.js	/^baidu.dom._styleFilter.filter = function(a, b, c) {$/;"	r
baidu.dom._styleFixer.textOverflow	test/a.js	/^baidu.dom._styleFixer.textOverflow = function() {$/;"	r
baidu.dom.addClass	test/a.js	/^baidu.dom.addClass = function(a, b) {$/;"	r
baidu.dom.children	test/a.js	/^baidu.dom.children = function(a) {$/;"	r
baidu.dom.contains	test/a.js	/^baidu.dom.contains = function(a, b) {$/;"	r
baidu.dom.create	test/a.js	/^baidu.dom.create = function(a, b) {$/;"	r
baidu.dom.drag	test/a.js	/^	baidu.dom.drag = function(j, t) {$/;"	r
baidu.dom.draggable	test/a.js	/^baidu.dom.draggable = function(a, b) {$/;"	r
baidu.dom.droppable	test/a.js	/^baidu.dom.droppable = function(a, b) {$/;"	r
baidu.dom.empty	test/a.js	/^baidu.dom.empty = function(a) {$/;"	r
baidu.dom.first	test/a.js	/^baidu.dom.first = function(a) {$/;"	r
baidu.dom.fixable	test/a.js	/^baidu.dom.fixable = function(a, b) {$/;"	r
baidu.dom.g	test/a.js	/^baidu.dom.g = function(a) {$/;"	r
baidu.dom.getAncestorBy	test/a.js	/^baidu.dom.getAncestorBy = function(a, b) {$/;"	r
baidu.dom.getAncestorByClass	test/a.js	/^baidu.dom.getAncestorByClass = function(a, b) {$/;"	r
baidu.dom.getAncestorByTag	test/a.js	/^baidu.dom.getAncestorByTag = function(a, b) {$/;"	r
baidu.dom.getAttr	test/a.js	/^baidu.dom.getAttr = function(a, b) {$/;"	r
baidu.dom.getComputedStyle	test/a.js	/^baidu.dom.getComputedStyle = function(a, b) {$/;"	r
baidu.dom.getCurrentStyle	test/a.js	/^baidu.dom.getCurrentStyle = function(a, b) {$/;"	r
baidu.dom.getDocument	test/a.js	/^baidu.dom.getDocument = function(a) {$/;"	r
baidu.dom.getParent	test/a.js	/^baidu.dom.getParent = function(a) {$/;"	r
baidu.dom.getPosition	test/a.js	/^baidu.dom.getPosition = function(a) {$/;"	r
baidu.dom.getStyle	test/a.js	/^baidu.dom.getStyle = function(a, b) {$/;"	r
baidu.dom.getText	test/a.js	/^baidu.dom.getText = function(a) {$/;"	r
baidu.dom.getWindow	test/a.js	/^baidu.dom.getWindow = function(a) {$/;"	r
baidu.dom.hasAttr	test/a.js	/^baidu.dom.hasAttr = function(a, b) {$/;"	r
baidu.dom.hasClass	test/a.js	/^baidu.dom.hasClass = function(a, b) {$/;"	r
baidu.dom.hide	test/a.js	/^baidu.dom.hide = function(a) {$/;"	r
baidu.dom.insertAfter	test/a.js	/^baidu.dom.insertAfter = function(a, b) {$/;"	r
baidu.dom.insertBefore	test/a.js	/^baidu.dom.insertBefore = function(a, b) {$/;"	r
baidu.dom.insertHTML	test/a.js	/^baidu.dom.insertHTML = function(a, b, c) {$/;"	r
baidu.dom.intersect	test/a.js	/^baidu.dom.intersect = function(a, b) {$/;"	r
baidu.dom.last	test/a.js	/^baidu.dom.last = function(a) {$/;"	r
baidu.dom.next	test/a.js	/^baidu.dom.next = function(a) {$/;"	r
baidu.dom.opacity	test/a.js	/^baidu.dom.opacity = function(a, b) {$/;"	r
baidu.dom.prev	test/a.js	/^baidu.dom.prev = function(a) {$/;"	r
baidu.dom.q	test/a.js	/^baidu.dom.q = function(a, b, c) {$/;"	r
baidu.dom.ready	test/a.js	/^	var a = baidu.dom.ready = function() {$/;"	r
baidu.dom.remove	test/a.js	/^baidu.dom.remove = function(a) {$/;"	r
baidu.dom.removeClass	test/a.js	/^baidu.dom.removeClass = function(a, b) {$/;"	r
baidu.dom.removeStyle	test/a.js	/^baidu.dom.removeStyle = function() {$/;"	r
baidu.dom.resizable	test/a.js	/^baidu.dom.resizable = function(a, b) {$/;"	r
baidu.dom.setAttr	test/a.js	/^baidu.dom.setAttr = function(a, b, c) {$/;"	r
baidu.dom.setAttrs	test/a.js	/^baidu.dom.setAttrs = function(a, b) {$/;"	r
baidu.dom.setBorderBoxHeight	test/a.js	/^baidu.dom.setOuterHeight = baidu.dom.setBorderBoxHeight = function(a, b) {$/;"	r
baidu.dom.setBorderBoxSize	test/a.js	/^baidu.dom.setBorderBoxSize = function(a, b) {$/;"	r
baidu.dom.setBorderBoxWidth	test/a.js	/^baidu.dom.setOuterWidth = baidu.dom.setBorderBoxWidth = function(a, b) {$/;"	r
baidu.dom.setPixel	test/a.js	/^baidu.dom.setPixel = function(a, b, c) {$/;"	r
baidu.dom.setPosition	test/a.js	/^baidu.dom.setPosition = function(a, b) {$/;"	r
baidu.dom.setStyle	test/a.js	/^baidu.dom.setStyle = function(a, b, c) {$/;"	r
baidu.dom.setStyles	test/a.js	/^baidu.dom.setStyles = function(a, b) {$/;"	r
baidu.dom.show	test/a.js	/^baidu.dom.show = function(a) {$/;"	r
baidu.dom.toggle	test/a.js	/^baidu.dom.toggle = function(a) {$/;"	r
baidu.dom.toggleClass	test/a.js	/^baidu.dom.toggleClass = function(a, b) {$/;"	r
baidu.element	test/a.js	/^baidu.element = function(a) {$/;"	r
baidu.element.Element	test/a.js	/^baidu.element.Element = function(a) {$/;"	r
baidu.element.Element.prototype.each	test/a.js	/^baidu.element.Element.prototype.each = function(a) {$/;"	r
baidu.element._makeChain	test/a.js	/^baidu.element._makeChain = function() {$/;"	r
baidu.element._toChainFunction	test/a.js	/^baidu.element._toChainFunction = function(a, b, c) {$/;"	r
baidu.element.extend	test/a.js	/^baidu.element.extend = function(a) {$/;"	r
baidu.event.EventArg	test/a.js	/^baidu.event.EventArg = function(a, b) {$/;"	r
baidu.event.EventArg.prototype.preventDefault	test/a.js	/^baidu.event.EventArg.prototype.preventDefault = function() {$/;"	r
baidu.event.EventArg.prototype.stop	test/a.js	/^baidu.event.EventArg.prototype.stop = function() {$/;"	r
baidu.event.EventArg.prototype.stopPropagation	test/a.js	/^baidu.event.EventArg.prototype.stopPropagation = function() {$/;"	r
baidu.event._eventFilter._crossElementBoundary	test/a.js	/^baidu.event._eventFilter._crossElementBoundary = function(a, b) {$/;"	r
baidu.event._unload	test/a.js	/^baidu.event._unload = function() {$/;"	r
baidu.event.fire	test/a.js	/^	baidu.event.fire = function(a, e, f) {$/;"	r
baidu.event.get	test/a.js	/^baidu.event.get = function(a, b) {$/;"	r
baidu.event.getEvent	test/a.js	/^baidu.event.getEvent = function(a) {$/;"	r
baidu.event.getKeyCode	test/a.js	/^baidu.event.getKeyCode = function(a) {$/;"	r
baidu.event.getPageX	test/a.js	/^baidu.event.getPageX = function(a) {$/;"	r
baidu.event.getPageY	test/a.js	/^baidu.event.getPageY = function(a) {$/;"	r
baidu.event.getTarget	test/a.js	/^baidu.event.getTarget = function(a) {$/;"	r
baidu.event.on	test/a.js	/^baidu.event.on = function(a, b, c) {$/;"	r
baidu.event.once	test/a.js	/^baidu.event.once = function(a, b, c) {$/;"	r
baidu.event.preventDefault	test/a.js	/^baidu.event.preventDefault = function(a) {$/;"	r
baidu.event.stop	test/a.js	/^baidu.event.stop = function(a) {$/;"	r
baidu.event.stopPropagation	test/a.js	/^baidu.event.stopPropagation = function(a) {$/;"	r
baidu.event.un	test/a.js	/^baidu.event.un = function(a, b, c) {$/;"	r
baidu.fn.abstractMethod	test/a.js	/^baidu.fn.abstractMethod = function() {$/;"	r
baidu.fn.bind	test/a.js	/^baidu.fn.bind = function(a, b) {$/;"	r
baidu.fn.blank	test/a.js	/^baidu.fn.blank = function() {},$/;"	r
baidu.fn.methodize	test/a.js	/^baidu.fn.methodize = function(a, b) {$/;"	r
baidu.fn.multize	test/a.js	/^baidu.fn.multize = function(a, b, c) {$/;"	r
baidu.fn.wrapReturnValue	test/a.js	/^baidu.fn.wrapReturnValue = function(a, b, c) {$/;"	r
baidu.form.json	test/a.js	/^baidu.form.json = function(a, b) {$/;"	r
baidu.form.serialize	test/a.js	/^baidu.form.serialize = function(a, b) {$/;"	r
baidu.global.get	test/a.js	/^	baidu.global.get = function(b) {$/;"	r
baidu.global.getZIndex	test/a.js	/^baidu.global.getZIndex = function(a, b) {$/;"	r
baidu.global.set	test/a.js	/^	baidu.global.set = function(b, c, d) {$/;"	r
baidu.guid	test/a.js	/^baidu.guid = "$BAIDU$",$/;"	r
baidu.json.parse	test/a.js	/^baidu.json.parse = function(a) {$/;"	r
baidu.json.stringify	test/a.js	/^baidu.json.stringify = function() {$/;"	r
baidu.lang.Class	test/a.js	/^baidu.lang.Class = function() {$/;"	r
baidu.lang.Class.prototype.addEventListener	test/a.js	/^baidu.lang.Class.prototype.on = baidu.lang.Class.prototype.addEventListener = function(a, b, c) {$/;"	r
baidu.lang.Class.prototype.addEventListeners	test/a.js	/^baidu.lang.Class.prototype.addEventListeners = function(a, b) {$/;"	r
baidu.lang.Class.prototype.dispatchEvent	test/a.js	/^baidu.lang.Class.prototype.fire = baidu.lang.Class.prototype.dispatchEvent = function(a, b) {$/;"	r
baidu.lang.Class.prototype.dispose	test/a.js	/^baidu.lang.Class.prototype.dispose = function() {$/;"	r
baidu.lang.Class.prototype.removeEventListener	test/a.js	/^baidu.lang.Class.prototype.un = baidu.lang.Class.prototype.removeEventListener = function(a, b) {$/;"	r
baidu.lang.Class.prototype.toString	test/a.js	/^baidu.lang.Class.prototype.toString = function() {$/;"	r
baidu.lang.Event	test/a.js	/^baidu.lang.Event = function(a, b) {$/;"	r
baidu.lang.createClass	test/a.js	/^baidu.lang.createClass = function(a, b) {$/;"	r
baidu.lang.createSingle	test/a.js	/^baidu.lang.createSingle = function(a) {$/;"	r
baidu.lang.decontrol	test/a.js	/^baidu.lang.decontrol = function(a) {$/;"	r
baidu.lang.getModule	test/a.js	/^baidu.lang.getModule = function(a, b) {$/;"	r
baidu.lang.guid	test/a.js	/^baidu.lang.guid = function() {$/;"	r
baidu.lang.inherits	test/a.js	/^baidu.lang.inherits = function(a, b, c) {$/;"	r
baidu.lang.instance	test/a.js	/^baidu.lang.instance = function(a) {$/;"	r
baidu.lang.isArray	test/a.js	/^baidu.lang.isArray = function(a) {$/;"	r
baidu.lang.isBoolean	test/a.js	/^baidu.lang.isBoolean = function(a) {$/;"	r
baidu.lang.isDate	test/a.js	/^baidu.lang.isDate = function(a) {$/;"	r
baidu.lang.isElement	test/a.js	/^baidu.lang.isElement = function(a) {$/;"	r
baidu.lang.isFunction	test/a.js	/^baidu.lang.isFunction = function(a) {$/;"	r
baidu.lang.isNumber	test/a.js	/^baidu.lang.isNumber = function(a) {$/;"	r
baidu.lang.isObject	test/a.js	/^baidu.lang.isObject = function(a) {$/;"	r
baidu.lang.isString	test/a.js	/^baidu.lang.isString = function(a) {$/;"	r
baidu.lang.module	test/a.js	/^baidu.lang.module = function(name, module, owner) {$/;"	r
baidu.lang.register	test/a.js	/^baidu.lang.register = function(a, b, c) {$/;"	r
baidu.lang.toArray	test/a.js	/^baidu.lang.toArray = function(a) {$/;"	r
baidu.number.comma	test/a.js	/^baidu.number.comma = function(a, b) {$/;"	r
baidu.number.pad	test/a.js	/^baidu.number.pad = function(a, b) {$/;"	r
baidu.number.randomInt	test/a.js	/^baidu.number.randomInt = function(a, b) {$/;"	r
baidu.object.clone	test/a.js	/^baidu.object.clone = function(a) {$/;"	r
baidu.object.each	test/a.js	/^baidu.object.each = function(a, b) {$/;"	r
baidu.object.extend	test/a.js	/^baidu.extend = baidu.object.extend = function(a, b) {$/;"	r
baidu.object.isEmpty	test/a.js	/^baidu.object.isEmpty = function(a) {$/;"	r
baidu.object.isPlain	test/a.js	/^baidu.object.isPlain = function(a) {$/;"	r
baidu.object.keys	test/a.js	/^baidu.object.keys = function(a) {$/;"	r
baidu.object.map	test/a.js	/^baidu.object.map = function(a, b) {$/;"	r
baidu.object.merge	test/a.js	/^	baidu.object.merge = function(a, c, d) {$/;"	r
baidu.object.values	test/a.js	/^baidu.object.values = function(a) {$/;"	r
baidu.page.createStyleSheet	test/a.js	/^baidu.page.createStyleSheet = function(a) {$/;"	r
baidu.page.getHeight	test/a.js	/^baidu.page.getHeight = function() {$/;"	r
baidu.page.getMousePosition	test/a.js	/^	baidu.page.getMousePosition = function() {$/;"	r
baidu.page.getScrollLeft	test/a.js	/^baidu.page.getScrollLeft = function() {$/;"	r
baidu.page.getScrollTop	test/a.js	/^baidu.page.getScrollTop = function() {$/;"	r
baidu.page.getViewHeight	test/a.js	/^baidu.page.getViewHeight = function() {$/;"	r
baidu.page.getViewWidth	test/a.js	/^baidu.page.getViewWidth = function() {$/;"	r
baidu.page.getWidth	test/a.js	/^baidu.page.getWidth = function() {$/;"	r
baidu.page.lazyLoadImage	test/a.js	/^baidu.page.lazyLoadImage = function(a) {$/;"	r
baidu.page.load	test/a.js	/^baidu.page.load = function(a, b, c) {$/;"	r
baidu.page.load.charset	test/a.js	/^baidu.page.load.charset = "UTF8",$/;"	r
baidu.page.loadCssFile	test/a.js	/^baidu.page.loadCssFile = function(a) {$/;"	r
baidu.page.loadJsFile	test/a.js	/^baidu.page.loadJsFile = function(a) {$/;"	r
baidu.sio._createScriptTag	test/a.js	/^baidu.sio._createScriptTag = function(a, b, c) {$/;"	r
baidu.sio._removeScriptTag	test/a.js	/^baidu.sio._removeScriptTag = function(a) {$/;"	r
baidu.sio.callByBrowser	test/a.js	/^baidu.sio.callByBrowser = function(a, b, c) {$/;"	r
baidu.sio.callByServer	test/a.js	/^baidu.sio.callByServer = function(a, b, c) {$/;"	r
baidu.sio.log	test/a.js	/^baidu.sio.log = function(a) {$/;"	r
baidu.string.decodeHTML	test/a.js	/^baidu.string.decodeHTML = function(a) {$/;"	r
baidu.string.encodeHTML	test/a.js	/^baidu.string.encodeHTML = function(a) {$/;"	r
baidu.string.escapeReg	test/a.js	/^baidu.string.escapeReg = function(a) {$/;"	r
baidu.string.filterFormat	test/a.js	/^baidu.string.filterFormat = function(a, b) {$/;"	r
baidu.string.filterFormat.escapeJs	test/a.js	/^baidu.string.filterFormat.escapeJs = function(a) {$/;"	r
baidu.string.filterFormat.escapeString	test/a.js	/^baidu.string.filterFormat.escapeString = function(a) {$/;"	r
baidu.string.filterFormat.toInt	test/a.js	/^baidu.string.filterFormat.toInt = function(a) {$/;"	r
baidu.string.format	test/a.js	/^baidu.string.format = function(a, b) {$/;"	r
baidu.string.formatColor	test/a.js	/^	baidu.string.formatColor = function(d) {$/;"	r
baidu.string.getByteLength	test/a.js	/^baidu.string.getByteLength = function(a) {$/;"	r
baidu.string.stripTags	test/a.js	/^baidu.string.stripTags = function(a) {$/;"	r
baidu.string.subByte	test/a.js	/^baidu.string.subByte = function(a, b, c) {$/;"	r
baidu.string.toCamelCase	test/a.js	/^baidu.string.toCamelCase = function(a) {$/;"	r
baidu.string.toHalfWidth	test/a.js	/^baidu.string.toHalfWidth = function(a) {$/;"	r
baidu.string.trim	test/a.js	/^	baidu.string.trim = function(b) {$/;"	r
baidu.string.wbr	test/a.js	/^baidu.string.wbr = function(a) {$/;"	r
baidu.swf.Proxy	test/a.js	/^baidu.swf.Proxy = function(a, b, c) {$/;"	r
baidu.swf.Proxy.prototype.call	test/a.js	/^baidu.swf.Proxy.prototype.call = function(a, b) {$/;"	r
baidu.swf.Proxy.prototype.getFlash	test/a.js	/^baidu.swf.Proxy.prototype.getFlash = function() {$/;"	r
baidu.swf.Proxy.prototype.isReady	test/a.js	/^baidu.swf.Proxy.prototype.isReady = function() {$/;"	r
baidu.swf.create	test/a.js	/^baidu.swf.create = function(a, b) {$/;"	r
baidu.swf.createHTML	test/a.js	/^baidu.swf.createHTML = function(a) {$/;"	r
baidu.swf.getMovie	test/a.js	/^baidu.swf.getMovie = function(a) {$/;"	r
baidu.swf.version	test/a.js	/^baidu.swf.version = function() {$/;"	r
baidu.url.escapeSymbol	test/a.js	/^baidu.url.escapeSymbol = function(a) {$/;"	r
baidu.url.getQueryValue	test/a.js	/^baidu.url.getQueryValue = function(a, b) {$/;"	r
baidu.url.jsonToQuery	test/a.js	/^baidu.url.jsonToQuery = function(a, b) {$/;"	r
baidu.url.queryToJson	test/a.js	/^baidu.url.queryToJson = function(a) {$/;"	r
base_color_mode	bundle/powerline/autoload/Pl/Parser.vim	/^					let base_color_mode = ! has_key(base_color, mode) ? base_color['n'] : base_color[mode]$/;"	v
base_snippet_files_for	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def base_snippet_files_for(self, ft, default=True):$/;"	m	class:SnippetManager
basename	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def basename(self):$/;"	m	class:SnippetUtil
behavsCurrent	bundle/autocomplete/autoload/acp.vim	/^let s:behavsCurrent = []$/;"	v
bookmark	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:bookmark(word)$/;"	f
bookmarkHere	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:bookmarkHere(word)$/;"	f
bufTimes	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:bufTimes = {}$/;"	v
bufferCursorPosMap	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:bufferCursorPosMap = {}$/;"	v
buffer_segments	bundle/powerline/autoload/Pl/Theme.vim	/^	let buffer_segments = Pl#Colorscheme#Apply(g:Powerline_colorscheme, buffer_segments)$/;"	v
button	test/a.js	/^			button: function(a) {$/;"	r
buttons	test/a.js	/^						buttons: [{$/;"	r
byte2col	bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def byte2col(line, nbyte):$/;"	f
c	bundle/jsbeautify/plugin/jsbeautify.vim	/^				let c .= s:input[s:parser_pos]$/;"	v
c	bundle/jsbeautify/plugin/jsbeautify.vim	/^				let c = s:input[s:parser_pos]$/;"	v
c	bundle/jsbeautify/plugin/jsbeautify.vim	/^			let c .= s:input[s:parser_pos]$/;"	v
c	bundle/jsbeautify/plugin/jsbeautify.vim	/^			let c = s:input[s:parser_pos]$/;"	v
c	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def c(self):$/;"	m	class:SnippetUtil
c	test/a.js	/^					var c = [],$/;"	r
c	test/a.js	/^				var c = "_q_cbk_" + Math.floor(Math.random() * 1e4) + "_" + (new Date).getTime();$/;"	r
c	test/a.js	/^			c = [];$/;"	r
c	test/a.js	/^		b ? c = {$/;"	r
c	test/a.js	/^		c = "__sizzle__";$/;"	r
c	test/a.js	/^		return document.addEventListener ? c = function() {$/;"	r
c	test/a.js	/^	c = "tangram_sio_log_" + Math.floor(Math.random() * 2147483648).toString(36);$/;"	r
c	test/a.js	/^	c = [],$/;"	r
c	test/a.js	/^	c = {$/;"	r
c	test/a.js	/^	function c(a) {$/;"	r
c	test/a.js	/^	var c = "",$/;"	r
c	test/a.js	/^	var c = "ifrMusicPlayer" + a,$/;"	r
c	test/a.js	/^	var c = [],$/;"	r
c	test/a.js	/^	var c = {},$/;"	r
c	test/a.js	/^	var c = {};$/;"	r
c.frameBorder	test/a.js	/^			c.frameBorder = "none";$/;"	r
cache	bundle/powerline/autoload/Pl.vim	/^			let cache = [$/;"	v
cancel	test/a.js	/^		cancel: function() {$/;"	r
changeCoverage	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:changeCoverage(name)$/;"	f
checkDataFileCompatibility	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:checkDataFileCompatibility()$/;"	f
checkKey	bundle/l9/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f
check_output	bundle/ultisnips/test.py	/^    def check_output(self):$/;"	m	class:_VimTest
checkbox	test/a.js	/^			checkbox: function(a) {$/;"	r
checked	test/a.js	/^			checked: function(a) {$/;"	r
child	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let child = current.child[n]$/;"	v
child_seg_name	bundle/powerline/autoload/Pl/Colorscheme.vim	/^						let child_seg_name = join(child_segment.variants[0:i], '.')$/;"	v
child_seg_ns_name	bundle/powerline/autoload/Pl/Colorscheme.vim	/^						let child_seg_ns_name = len(child_segment.ns) > 0 ? child_segment.ns .':'. child_seg_name : child_seg_name$/;"	v
child_segment	bundle/powerline/autoload/Pl/Colorscheme.vim	/^							let child_segment.colors = colorscheme[child_seg_name]$/;"	v
child_segment	bundle/powerline/autoload/Pl/Colorscheme.vim	/^							let child_segment.colors = colorscheme[child_seg_ns_name]$/;"	v
child_segment	bundle/powerline/autoload/Pl/Colorscheme.vim	/^					let child_segment.ns = segment.ns$/;"	v
child_segment	bundle/powerline/autoload/Pl/Colorscheme.vim	/^					let child_segment.variants = [seg_name] + split(child_segment.name, '\\.')$/;"	v
cl	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let cl = last.child$/;"	v
clear_outputs	bundle/l9/autoload/l9/async.py	/^    def clear_outputs(self):$/;"	m	class:Worker
clear_snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def clear_snippets(self, triggers = [], ft = "all"):$/;"	m	class:SnippetManager
clear_snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def clear_snippets(self, triggers=[]):$/;"	m	class:_SnippetDictionary
cls	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let cls += cl$/;"	v
cls	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let cls = []$/;"	v
cntrl_beg	indent/javascript.vim	/^let s:cntrl_beg = s:cntrl_beg_keys . s:js_end_line_comment . '$' $/;"	v
cntrl_beg_keys	indent/javascript.vim	/^let s:cntrl_beg_keys = '\\(\\(\\(if\\|for\\|with\\|while\\)\\s*(.*)\\)\\|\\(try\\|do\\)\\)\\s*'$/;"	v
cntrl_end	indent/javascript.vim	/^let s:cntrl_end = '\\(while\\s*(.*)\\)\\s*;\\=\\s*' . s:js_end_line_comment . '$'$/;"	v
cntrl_mid	indent/javascript.vim	/^let s:cntrl_mid = s:cntrl_mid_keys . s:js_end_line_comment . '$' $/;"	v
cntrl_mid_keys	indent/javascript.vim	/^let s:cntrl_mid_keys = '\\(\\(\\(else\\s*if\\|catch\\)\\s*(.*)\\)\\|\\(finally\\|else\\)\\)\\s*'$/;"	v
col	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def col():$/;"	m	class:Position
col	bundle/zencoding/autoload/zencoding.vim	/^      let col = col("'<")$/;"	v
col2byte	bundle/ultisnips/plugin/UltiSnips/compatibility.py	/^    def col2byte(line, col):$/;"	f
color	colors/jellybeans.vim	/^fun! s:color(r, g, b)$/;"	f
colors	bundle/powerline/autoload/Pl/Parser.vim	/^				let colors = get(seg_curr, 'colors', base_color)$/;"	v
colors_name	colors/jellybeans.vim	/^let colors_name = "jellybeans"$/;"	v
command	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def command(s):$/;"	f
comment	bundle/jsbeautify/plugin/jsbeautify.vim	/^					let comment .= s:input[s:parser_pos]$/;"	v
comment	bundle/jsbeautify/plugin/jsbeautify.vim	/^				let comment .= s:input[s:parser_pos]$/;"	v
comment	bundle/jsbeautify/plugin/jsbeautify.vim	/^			let comment = c$/;"	v
comment	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let comment = ""$/;"	v
compareTimeDescending	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:compareTimeDescending(i1, i2)$/;"	f
compatible_exec	bundle/ultisnips/plugin/UltiSnips/compatibility_py2.py	/^def compatible_exec(code, gglobals = None, glocals = None):$/;"	f
conserve	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
content	bundle/zencoding/autoload/zencoding.vim	/^      let content = join(getline(a:firstline, a:lastline), "\\n")$/;"	v
continuation	indent/javascript.vim	/^let s:continuation = '\\(+\\|\\\\\\)\\{1}' . s:js_line_comment . '$' $/;"	v
conv	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def conv(obj):$/;"	f
convert_keys	bundle/ultisnips/test.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
convert_snippet	bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippet(source):$/;"	f
convert_snippet_contents	bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippet_contents(content):$/;"	f
convert_snippet_file	bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippet_file(source):$/;"	f
convert_snippets	bundle/ultisnips/utils/convert_snipmate_snippets.py	/^def convert_snippets(source):$/;"	f
copy_outputs	bundle/l9/autoload/l9/async.py	/^    def copy_outputs(self):$/;"	m	class:Worker
could_match	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def could_match(self, trigger):$/;"	m	class:Snippet
cpo	bundle/align/autoload/Align.vim	/^let &cpo= s:keepcpo$/;"	v
cpo	bundle/align/autoload/AlignMaps.vim	/^let &cpo= s:keepcpo$/;"	v
cpo	bundle/align/plugin/AlignMapsPlugin.vim	/^let &cpo= s:keepcpo$/;"	v
cpo	bundle/align/plugin/AlignPlugin.vim	/^let &cpo= s:keepcpo$/;"	v
cpo	bundle/align/plugin/cecutil.vim	/^let &cpo= s:keepcpo$/;"	v
cpo	bundle/grep/plugin/grep.vim	/^let &cpo = s:cpo_save$/;"	v
cpo	bundle/zencoding/autoload/zencoding.vim	/^let &cpo = s:save_cpo$/;"	v
cpo	bundle/zencoding/plugin/zencoding.vim	/^let &cpo = s:save_cpo$/;"	v
cpo_save	bundle/grep/plugin/grep.vim	/^let s:cpo_save = &cpo$/;"	v
createChangeCoverageListener	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:createChangeCoverageListener()$/;"	f
createDataBufferListener	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:createDataBufferListener(dataFile)$/;"	f
createEditDataListener	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:createEditDataListener()$/;"	f
cterm2gui_dict	bundle/powerline/autoload/Pl/Hi.vim	/^let s:cterm2gui_dict = {$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^        let current.snippet .= "\\n"$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^        let current.snippet = substitute(current.snippet, '${cursor}', '', 'g') . '${cursor}'$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.name = ''$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.name = aliases[tag_name]$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = '-moz-' . snippet . "\\n"$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = '-webkit-' . snippet . "\\n"$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = join(lines, "\\n")$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = printf("background-image: -moz-linear-gradient(%s, %s);\\n", lg[2], lg[3])$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = printf("background-image: -o-linear-gradient(%s, %s);\\n", lg[2], lg[3])$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = printf("background-image: -webkit-gradient(%s, 0 0, 0 100%, from(%s), to(%s));\\n", lg[1], lg[2], lg[3])$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = printf("background-image: -webkit-linear-gradient(%s, %s);\\n", lg[2], lg[3])$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = printf("background-image: linear-gradient(%s, %s);\\n", lg[2], lg[3])$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = snippet$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let current.snippet = substitute(current.snippet, ';', value . ';', '')$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let current = { 'name': '', 'attr': {}, 'child': [], 'snippet': '', 'multiplier': 1, 'parent': {}, 'value': '', 'pos': 0, 'important': important }$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let current.name = tag_name$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let current.pos = 0$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^                  let current.attr[k] = a[k]$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^                  let current.attr[k] = len(a[k]) ? substitute(a[k], '|', '${cursor}', 'g') : '${cursor}'$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^                let current.attr[k] = a[k]$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let current.attr[key] = val$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let current.name = substitute(current.name, ':.*$', '', '')$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let current.attr.class = substitute(item[1:], '\\.', ' ', 'g')$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let current.attr.id = item[1:]$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let current.parent = last$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let current.parent = parent$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let current.parent = tmp$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let current.pos = last.pos + 1$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let current.pos = last.pos$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let current.name = ''$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let current.parent = parent$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let current.pos = 1$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let current.value = tag_name$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let current.value = value$/;"	v
current	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let current.multiplier = multiplier$/;"	v
current_line_splitted	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def current_line_splitted(self):$/;"	m	class:VimBuffer
current_syntax	bundle/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippet"$/;"	v
current_text	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def cursor():$/;"	m	class:VimBuffer
cursor_moved	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def cursor_moved(self):$/;"	m	class:SnippetManager
d	test/a.js	/^				var d = [];$/;"	r
d	test/a.js	/^			for (var e, f = 1, d = "#"; f < 4; f++) e = parseInt(RegExp["$" + f]).toString(16),$/;"	r
d	test/a.js	/^			var d = ["{"],$/;"	r
d	test/a.js	/^		var d = [];$/;"	r
d	test/a.js	/^	d = "<style type='text\/css'><\/style>",$/;"	r
d	test/a.js	/^	d = [],$/;"	r
d	test/a.js	/^	d = function() {$/;"	r
d	test/a.js	/^	d = function(a) {$/;"	r
d	test/a.js	/^	d = {$/;"	r
d	test/a.js	/^	d = {},$/;"	r
d	test/a.js	/^	function d(a) {$/;"	r
d	test/a.js	/^	function d(e) {$/;"	r
d	test/a.js	/^	var c, d = ["ondragstart", "ondrag", "ondragend"],$/;"	r
d	test/a.js	/^	var d = [],$/;"	r
d	test/a.js	/^	var d = function() {$/;"	r
d	test/a.js	/^	var d = function(b) {$/;"	r
d.data	test/a.js	/^		d.method && d.method != "get" && d.method != "GET" ? (e = "post", d.data && typeof d.data == "object" ? d.data.bdstoken = d.data.bdstoken || qBdsToken: d.data && typeof d.data == "string" && (d.data = qing.url.queryToJson(d.data), d.data.bdstoken = d.data.bdstoken || qBdsToken), d.data || (d.data = {$/;"	r
d.extend	test/a.js	/^	d.extend = function(a) {$/;"	r
d.onload	test/a.js	/^	d.onload = function() {$/;"	r
d.onreadystatechange	test/a.js	/^	d.onload = d.onreadystatechange = function() {$/;"	r
d.onsuccess	test/a.js	/^		return d.onsuccess = function(a, f) {$/;"	r
dataMap	bundle/l9/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
deactivateFufBuffer	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:deactivateFufBuffer()$/;"	f
debug	bundle/ultisnips/plugin/UltiSnips/debug.py	/^def debug(s):$/;"	f
defaultCommentString	bundle/tcomment/autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
defaultComments	bundle/tcomment/autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
default_modes	bundle/powerline/autoload/Pl/Segment.vim	/^let s:default_modes = ['n', 'N', 'v', 'i', 'r', 's']$/;"	v
defineOption	bundle/autocomplete/plugin/acp.vim	/^function s:defineOption(name, default)$/;"	f
definitions	bundle/tcomment/autoload/tcomment.vim	/^let s:definitions = {}$/;"	v
description	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def description(self):$/;"	m	class:Snippet
detect_parsing	bundle/ultisnips/test.py	/^    def detect_parsing(self):$/;"	m	class:VimInterfaceScreen
did_UltiSnips_snipmate_compatibility	bundle/ultisnips/plugin/snipMate_compatibility.vim	/^let did_UltiSnips_snipmate_compatibility = 1$/;"	v
did_UltiSnips_vim	bundle/ultisnips/plugin/UltiSnips.vim	/^let did_UltiSnips_vim=1$/;"	v
did_UltiSnips_vim_after	bundle/ultisnips/after/plugin/UltiSnips_after.vim	/^let did_UltiSnips_vim_after=1$/;"	v
did_indent	indent/javascript.vim	/^let b:did_indent = 1$/;"	v
diff	bundle/ultisnips/plugin/UltiSnips/_diff.py	/^def diff(a, b, sline = 0):$/;"	f
diff	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def diff(self,pos):$/;"	m	class:Position
diff_in_buffer_length	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
dirPrev	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^    let dirPrev = fnamemodify(dirPrev, ':h')$/;"	v
dirPrev	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^  let dirPrev = a:dir$/;"	v
dirPrevPrev	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^    let dirPrevPrev = dirPrev$/;"	v
direction	test/a.js	/^		direction: ["e", "s", "se"],$/;"	r
directionHandlePosition	test/a.js	/^		directionHandlePosition: {}$/;"	r
disabled	test/a.js	/^			disabled: function(a) {$/;"	r
dispose	test/a.js	/^		dispose: function() {$/;"	r
do_tests	bundle/zencoding/unittest.vim	/^function! s:do_tests(...)$/;"	f
document.body.style.MozUserSelect	test/a.js	/^		document.body.style.MozUserSelect = "none",$/;"	r
document.body.style.MozUserSelect	test/a.js	/^		document.body.style.MozUserSelect = "none";$/;"	r
done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
dr	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let dr = 1$/;"	v
dr	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let dr = 1$/;"	v
dr	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let dr = 0$/;"	v
e	test/a.js	/^			e = {$/;"	r
e	test/a.js	/^			e: {$/;"	r
e	test/a.js	/^		e = "";$/;"	r
e	test/a.js	/^		e = {};$/;"	r
e	test/a.js	/^		var d, e = [],$/;"	r
e	test/a.js	/^		var e = function() {$/;"	r
e	test/a.js	/^	e = " " + d + " ",$/;"	r
e	test/a.js	/^	e = "bd__cbs__",$/;"	r
e	test/a.js	/^	e = function() {$/;"	r
e	test/a.js	/^	e = {$/;"	r
e	test/a.js	/^	e = {},$/;"	r
e	test/a.js	/^	function e(a) {$/;"	r
e	test/a.js	/^	var b, c, d, e = [];$/;"	r
e	test/a.js	/^	var c, d, e = {},$/;"	r
e	test/a.js	/^	var e = function() {},$/;"	r
e.innerHTML	test/a.js	/^			e.innerHTML = ""$/;"	r
echo_to_hierarchy	bundle/ultisnips/plugin/UltiSnips/debug.py	/^def echo_to_hierarchy(to):$/;"	f
emapleader	bundle/align/plugin/AlignMapsPlugin.vim	/^  let s:emapleader= escape(s:mapleader,'\\ ')$/;"	v
empty	test/a.js	/^			empty: function(a) {$/;"	r
enabled	test/a.js	/^			enabled: function(a) {$/;"	r
end	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def end(self):$/;"	m	class:TextObject
enumHelpTags	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:enumHelpTags(tagFiles)$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:enumItems(dir)$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:enumItems()$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:enumItems(dir)$/;"	f
enumItems	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:enumItems(dir)$/;"	f
enumNonCurrentItems	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:enumNonCurrentItems(dir, bufNrPrev, cache)$/;"	f
enumTaggedFiles	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:enumTaggedFiles(tagFiles)$/;"	f
enumTags	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:enumTags(tagFiles)$/;"	f
eq	test/a.js	/^			eq: function(a, b, c) {$/;"	r
err_to_scratch_buffer	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^def err_to_scratch_buffer(f):$/;"	f
esc	bundle/jsbeautify/plugin/jsbeautify.vim	/^					let esc = 0$/;"	v
esc	bundle/jsbeautify/plugin/jsbeautify.vim	/^					let esc = s:input[s:parser_pos] == "\\\\"$/;"	v
esc	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let esc = 0$/;"	v
escape	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def escape(inp):$/;"	f
escape	bundle/zencoding/unittest.vim	/^function! s:escape(str)$/;"	f
eval	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def eval(s):$/;"	f
evaluateLearningRank	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:evaluateLearningRank(word, stats)$/;"	f
even	test/a.js	/^			even: function(a, b) {$/;"	r
execute	bundle/l9/autoload/l9/async.py	/^    def execute(self, var_key, var_command, var_cwd, var_input, var_appends):$/;"	m	class:Asyncer
execute	bundle/l9/autoload/l9/async.py	/^    def execute(self, worker):$/;"	m	class:Executor
exists	bundle/zencoding/autoload/zencoding/lang.vim	/^let s:exists = {}$/;"	v
expand	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand	bundle/zencoding/autoload/zencoding.vim	/^            let expand = substitute(expand, '\\$column\\$', '\\=column', '')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^          let expand = substitute(expand, '\\$line'.(n-a:firstline+1).'\\$', '\\=lpart', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand .= '${cursor}'$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand .= zencoding#toString(item, type, 0, filters)$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand = '${cursor}' . expand$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand = substitute(expand, '&', '\\&amp;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand = substitute(expand, '<', '\\&lt;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand = substitute(expand, '>', '\\&gt;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand = substitute(expand, '\\n$', '', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand = substitute(expand, '\\n\\s*', '', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^        let expand = substitute(expand, '^\\(.*\\)\\$#\\s*$', '\\1', '')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand .= zencoding#toString(item, type, 0, filters)$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = lhs.expand.rhs$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = line[:-len(part)-1] . substitute(expand, "\\n", "\\n" . indent, 'g') . rest$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '${datetime}', strftime("%Y-%m-%dT%H:%M:%S %z"), 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '${datetime}', strftime("%Y-%m-%dT%H:%M:%S") . s:zen_settings.timezone, 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '&', '\\&amp;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '<', '\\&lt;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '>', '\\&gt;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '\\$#', '\\=content', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '\\$column\\$', '', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '\\$line\\d*\\$', '', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '\\${cursor}', '$cursor$', '')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '\\${cursor}', '', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^      let expand = substitute(expand, '\\n\\s*$', '', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '${charset}', s:zen_settings.charset, 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '${lang}', s:zen_settings.lang, 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '&', '\\&amp;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '<', '\\&lt;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '>', '\\&gt;', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '\\$line\\([0-9]\\+\\)\\$', '\\=submatch(1)', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '\\${charset}', s:zen_settings.charset, 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '\\${cursor}', '', 'g')$/;"	v
expand	bundle/zencoding/autoload/zencoding.vim	/^    let expand = substitute(expand, '\\${lang}', s:zen_settings.lang, 'g')$/;"	v
expandAbbrevMap	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:expandAbbrevMap(pattern, abbrevMap)$/;"	f
expandSearchDir	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:expandSearchDir(dir, level)$/;"	f
expand_anon	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def expand_anon(self, value, trigger="", descr="", options="", globals=None):$/;"	m	class:SnippetManager
expand_or_jump	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
extends	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def extends():$/;"	m	class:_SnippetDictionary
f	test/a.js	/^		f = "",$/;"	r
f	test/a.js	/^		f = "";$/;"	r
f	test/a.js	/^		f = function() { ! e && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete") && (e = ! 0, baidu.un(c, "load", f), baidu.un(c, "readystatechange", f), b.call(window, c))$/;"	r
f	test/a.js	/^		var c, d, f = [],$/;"	r
f	test/a.js	/^		var f = {$/;"	r
f	test/a.js	/^	f = function() {$/;"	r
f	test/a.js	/^	f = function(a) {$/;"	r
f	test/a.js	/^	f = function(a, b) {$/;"	r
f	test/a.js	/^	f = {$/;"	r
f	test/a.js	/^	var f = {$/;"	r
f.style.MozUserSelect	test/a.js	/^			f.style.MozUserSelect = "none",$/;"	r
feedPopup	bundle/autocomplete/autoload/acp.vim	/^function s:feedPopup()$/;"	f
feedkeys	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def feedkeys(s, mode='n'):$/;"	f
fetch_snippets_from_dir	bundle/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_dir(path):$/;"	f
fetch_snippets_from_svn	bundle/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_svn(name):$/;"	f
fget	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^        def fget(self):$/;"	m	class:_SnippetDictionary
fget	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        def fget(self):$/;"	m	class:VimBuffer
fget	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^        def fget(self):$/;"	m	class:Position
fget	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        def fget(self):$/;"	m	class:SnippetUtil
file	test/a.js	/^			file: function(a) {$/;"	r
file_to_edit	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def file_to_edit(self, ft):$/;"	m	class:SnippetManager
files	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def files(self):$/;"	m	class:_SnippetDictionary
filter	test/a.js	/^		filter: {$/;"	r
filters	bundle/zencoding/autoload/zencoding.vim	/^      let filters = split(matchstr(str, mx)[1:], '\\s*,\\s*')$/;"	v
filters	test/a.js	/^		filters: {$/;"	r
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,...) " {{{1$/;"	f
find	test/a.js	/^		find: {$/;"	r
findItem	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:findItem(items, word)$/;"	f
findItem	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:findItem(items, word)$/;"	f
findItem	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:findItem(items, word)$/;"	f
find_parent_for_new_to	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
finishPopup	bundle/autocomplete/autoload/acp.vim	/^function s:finishPopup(fGroup1)$/;"	f
first	test/a.js	/^			first: function(a, b) {$/;"	r
firstmenu	bundle/align/plugin/AlignMapsPlugin.vim	/^ let s:firstmenu= 1$/;"	v
fixup	bundle/ultisnips/utils/get_tm_snippets.py	/^    def fixup(m):$/;"	f
fn	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def fn(self):$/;"	m	class:SnippetUtil
focus	bundle/ultisnips/test.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
focus	bundle/ultisnips/test.py	/^    def focus(title=None):$/;"	m	class:VimInterface
focus	test/a.js	/^			focus: function(a) {$/;"	r
formatItemUsingCache	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:formatItemUsingCache(item)$/;"	f
fset	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^        def fset(self, value):$/;"	m	class:_SnippetDictionary
fset	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^        def fset(self, pos):$/;"	m	class:VimBuffer
fset	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^        def fset(self, value):$/;"	m	class:Position
fset	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^        def fset(self, value):$/;"	m	class:SnippetUtil
ft	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def ft(self):$/;"	m	class:SnippetUtil
fuf	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^  augroup fuf#buffer$/;"	a
fuf	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^  augroup fuf#mrufile$/;"	a
func_params	bundle/powerline/autoload/Pl/Parser.vim	/^			let func_params = [mode, side, seg_curr.segments, level + 1]$/;"	v
g	test/a.js	/^		g = "data-tangram-ori-src",$/;"	r
g	test/a.js	/^		g = [],$/;"	r
g	test/a.js	/^		g = {$/;"	r
g	test/a.js	/^	f, g = {},$/;"	r
g	test/a.js	/^	g = function(a) {$/;"	r
g	test/a.js	/^	g = function(a, b) {$/;"	r
g.position	test/a.js	/^			g.position = "absolute",$/;"	r
get	test/a.js	/^		get: function(a) {$/;"	r
get	test/a.js	/^	get: function(a) {$/;"	r
get	test/a.js	/^	get: function(a, b) {$/;"	r
getBufIndicator	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:getBufIndicator(bufNr)$/;"	f
getChangesLines	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:getChangesLines()$/;"	f
getCurrentHelpTagFiles	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getCurrentHelpTagFiles()$/;"	f
getCurrentText	bundle/autocomplete/autoload/acp.vim	/^function s:getCurrentText()$/;"	f
getCurrentWord	bundle/autocomplete/autoload/acp.vim	/^function s:getCurrentWord()$/;"	f
getEditableDataFiles	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getEditableDataFiles(modeName)$/;"	f
getFileType	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getFileType(bufNr)$/;"	f
getHelpTagEntries	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getHelpTagEntries(tagFile)$/;"	f
getJumpsLines	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:getJumpsLines()$/;"	f
getJumpsLines	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:getJumpsLines()$/;"	f
getLastBlockLength	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getLastBlockLength(pattern, patternIsPath)$/;"	f
getLinePattern	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:getLinePattern(lnum)$/;"	f
getMatchingIndex	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:getMatchingIndex(lines, pattern)$/;"	f
getMatchingIndex	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:getMatchingIndex(lines, cmd)$/;"	f
getMatchingLineNumber	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:getMatchingLineNumber(lines, pattern, lnumBegin)$/;"	f
getMatchingSnipItems	bundle/autocomplete/autoload/acp.vim	/^function s:getMatchingSnipItems(base)$/;"	f
getPostText	bundle/autocomplete/autoload/acp.vim	/^function s:getPostText()$/;"	f
getSnippedHead	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getSnippedHead(head, baseLen)$/;"	f
getTagData	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getTagData(bufNrs)$/;"	f
getTagItems	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:getTagItems(bufNr)$/;"	f
getTagNames	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:getTagNames(tagFile)$/;"	f
getTaggedFileList	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:getTaggedFileList(tagfile)$/;"	f
getWordBoundaries	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:getWordBoundaries(word)$/;"	f
get_buffer_data	bundle/ultisnips/test.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_dim	bundle/powerline/fontpatcher/fontpatcher	/^	def get_dim(glyph):$/;"	f
get_matching_snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def get_matching_snippets(self, trigger, potentially):$/;"	m	class:_SnippetDictionary
get_next_token	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:get_next_token()$/;"	f
global	test/a.js	/^	global: {}$/;"	r
grey_color	colors/jellybeans.vim	/^fun! s:grey_color(n)$/;"	f
grey_level	colors/jellybeans.vim	/^fun! s:grey_level(n)$/;"	f
grey_number	colors/jellybeans.vim	/^fun! s:grey_number(x)$/;"	f
gt	test/a.js	/^			gt: function(a, b, c) {$/;"	r
guess_edit	bundle/ultisnips/plugin/UltiSnips/_diff.py	/^def guess_edit(initial_line, lt, ct, vs):$/;"	f
h	test/a.js	/^		h = [].slice.call(arguments, 0),$/;"	r
h	test/a.js	/^	h = [d.minWidth || 0, d.maxWidth || Number.MAX_VALUE, d.minHeight || 0, d.maxHeight || Number.MAX_VALUE],$/;"	r
h	test/a.js	/^	h = function() {$/;"	r
h	test/a.js	/^	h = {$/;"	r
h	test/a.js	/^	h = {},$/;"	r
h.innerHTML	test/a.js	/^			for (var l = 0; l < 256; l++) l == 32 ? h.innerHTML = "&nbsp;": c(h, String.fromCharCode(l)),$/;"	r
h.style.cssText	test/a.js	/^			h.style.cssText = "float:left;" + j,$/;"	r
handleFailedAssersion	bundle/l9/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkdir.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackfile.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/callbackitem.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/dir.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/file.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givencmd.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givendir.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/givenfile.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/help.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/line.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^let s:handler = {}$/;"	v
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getModeName()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPreviewHeight()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.getPrompt()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPost()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPre()$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f
handler	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^let s:handler = {}$/;"	v
handler	test/a.js	/^							handler: function() {$/;"	r
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.addStat(pattern, word)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.concretize(deriv)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.existsPrompt(line)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.getMatchingCompleteItems(patternBase)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onBs()$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onComplete(findstart, base)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onCr(openType)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onCursorMovedI()$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onDeleteWord()$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onInsertLeave()$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onPreviewBase(repeatable)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onRecallPattern(shift)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMatching()$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.onSwitchMode(shift)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.removePrompt(line)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:handlerBase.restorePrompt(line)$/;"	f
handlerBase	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:handlerBase = {}$/;"	v
has	test/a.js	/^			has: function(a, b, c) {$/;"	r
header	test/a.js	/^			header: function(a) {$/;"	r
height	test/a.js	/^			height: function() {$/;"	r
highlightError	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:highlightError()$/;"	f
highlightPrompt	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:highlightPrompt(prompt)$/;"	f
hl_group	bundle/powerline/autoload/Pl/Parser.vim	/^				let hl_group = s:HlCreate(mode_colors)$/;"	v
href	test/a.js	/^			href: function(a) {$/;"	r
i	test/a.js	/^	function i(a) {$/;"	r
i	test/a.js	/^	i = [],$/;"	r
i	test/a.js	/^	i = function(a) {$/;"	r
i	test/a.js	/^	i = function(a, h) {$/;"	r
i	test/a.js	/^	i = {$/;"	r
i	test/a.js	/^	var i = {$/;"	r
iBehavs	bundle/autocomplete/autoload/acp.vim	/^let s:iBehavs = 0$/;"	v
i["X-Requested-With"]	test/a.js	/^	i["X-Requested-With"] = "XMLHttpRequest";$/;"	r
image	test/a.js	/^			image: function(a) {$/;"	r
important	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let important = 0$/;"	v
important	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let important = 1$/;"	v
in_array	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:in_array(what, arr)$/;"	f
indent	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:indent()$/;"	f
indent	bundle/zencoding/autoload/zencoding.vim	/^        let indent = ''$/;"	v
indent	bundle/zencoding/autoload/zencoding.vim	/^        let indent = line[:-len(part)-1]$/;"	v
indent_guides_auto_colors	colors/jellybeans.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
indent_to_spaces	bundle/ultisnips/plugin/UltiSnips/util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
initialize	bundle/fuzzyfinder/plugin/fuf.vim	/^function s:initialize()$/;"	f
inner	bundle/zencoding/autoload/zencoding.vim	/^      let inner = substitute(inner, "\\n", "\\n" . spaces, 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^        let inner .= zencoding#toString(child, type, inline, filters, itemno)$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let inner = substitute(inner, "\\n" . escape(indent, '\\') . "$", "", 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let inner = substitute(inner, "\\n", "\\n" . escape(indent, '\\'), 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^    let inner = ''$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let inner = substitute(inner, "\\n" . escape(indent, '\\') . '$', '', 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let inner = substitute(inner, "\\n", "\\n" . escape(indent, '\\'), 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let inner = substitute(inner, "^\\n", "", 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let inner = zencoding#toString(child, type, 0, filters, itemno)$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^      let inner .= zencoding#toString(child, type, inline, filters, itemno)$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^    let inner = ''$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^    let inner = substitute(inner, "\\n" . indent . "$", "", 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^    let inner = substitute(inner, "\\n", "\\n" . indent, 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/scss.vim	/^      let inner .= zencoding#toString(child, type, inline, filters, itemno)$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/scss.vim	/^    let inner = ''$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/scss.vim	/^    let inner = substitute(inner, "\\n" . escape(indent, '\\') . "$", "", 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/scss.vim	/^    let inner = substitute(inner, "\\n", "\\n" . escape(indent, '\\'), 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^        let inner .= zencoding#toString(child, type, inline, filters, itemno)$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let inner = substitute(inner, "\\n" . escape(indent, '\\') . "$", "", 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let inner = substitute(inner, "\\n", "\\n" . escape(indent, '\\'), 'g')$/;"	v
inner	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^    let inner = ''$/;"	v
input	test/a.js	/^			input: function(a) {$/;"	r
install_plugin	bundle/zencoding/plugin/zencoding.vim	/^function! s:install_plugin()$/;"	f
interpretPrimaryPatternForNonPath	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForNonPath(pattern)$/;"	f
interpretPrimaryPatternForPath	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPath(pattern)$/;"	f
interpretPrimaryPatternForPathTail	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPathTail(pattern)$/;"	f
isModifiedSinceLastCall	bundle/autocomplete/autoload/acp.vim	/^function s:isModifiedSinceLastCall()$/;"	f
is_complete_edit	bundle/ultisnips/plugin/UltiSnips/_diff.py	/^def is_complete_edit(initial_line, a, b, cmds):$/;"	f
is_focused	bundle/ultisnips/test.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_js	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:is_js()$/;"	f
is_killed	bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
item	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let item = matchstr(attr, '\\(\\%(\\%(#[{}a-zA-Z0-9_\\-\\$]\\+\\)\\|\\%(\\[[^\\]]\\+\\]\\)\\|\\%(\\.[{}a-zA-Z0-9_\\-\\$]\\+\\)*\\)\\)')$/;"	v
itemno	bundle/zencoding/autoload/zencoding.vim	/^    let itemno = itemno + 1$/;"	v
items	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^    let items = sort(keys(itemMap))$/;"	v
items	bundle/zencoding/autoload/zencoding.vim	/^        let items = zencoding#parseIntoTree(leader . "{".str."}", type).child$/;"	v
items	bundle/zencoding/autoload/zencoding.vim	/^        let items = zencoding#parseIntoTree(leader, type).child$/;"	v
items	bundle/zencoding/autoload/zencoding.vim	/^    let items = zencoding#parseIntoTree(str, type).child$/;"	v
j	test/a.js	/^		function j(c) {$/;"	r
j	test/a.js	/^		j = "font-family:" + h.fontFamily + ";font-size:" + h.fontSize + ";word-spacing:" + h.wordSpacing + ";font-weight:" + ((parseInt(i) || 0) == 401 ? 700: i) + ";font-style:" + h.fontStyle + ";font-variant:" + h.fontVariant,$/;"	r
j	test/a.js	/^		j = function(b, d, e, f) {$/;"	r
j	test/a.js	/^		var j = function() {$/;"	r
j	test/a.js	/^	d, e, f, g, h, i, j = {},$/;"	r
j	test/a.js	/^	function j(l) {$/;"	r
j	test/a.js	/^	j = function() {$/;"	r
j	test/a.js	/^	j = function(a, b) {$/;"	r
j	test/a.js	/^	var j = function(b, c, e, f) {$/;"	r
j.contains	test/a.js	/^	document.documentElement.contains ? j.contains = function(a, b) {$/;"	r
j.contains	test/a.js	/^	}: document.documentElement.compareDocumentPosition ? j.contains = function(a, b) {$/;"	r
j.contains	test/a.js	/^	}: j.contains = function() {$/;"	r
j.error	test/a.js	/^	j.error = function(a) {$/;"	r
j.filter	test/a.js	/^	j.filter = function(a, b, c, d) {$/;"	r
j.find	test/a.js	/^	j.find = function(a, b, c) {$/;"	r
j.getText	test/a.js	/^	var k = j.getText = function(a) {$/;"	r
j.isXML	test/a.js	/^	j.isXML = function(a) {$/;"	r
j.matches	test/a.js	/^	j.matches = function(a, b) {$/;"	r
j.matchesSelector	test/a.js	/^			j.matchesSelector = function(a, e) {$/;"	r
j.matchesSelector	test/a.js	/^	j.matchesSelector = function(a, b) {$/;"	r
j.selectors	test/a.js	/^	l = j.selectors = {$/;"	r
j.uniqueSort	test/a.js	/^	j.uniqueSort = function(a) {$/;"	r
js_end_line_comment	indent/javascript.vim	/^let s:js_end_line_comment = s:js_mid_line_comment . '\\s*\\(\/\/.*\\)*'$/;"	v
js_indent_log	indent/javascript.vim	/^	let g:js_indent_log = 0$/;"	v
js_line_comment	indent/javascript.vim	/^let s:js_line_comment = s:js_end_line_comment$/;"	v
js_mid_line_comment	indent/javascript.vim	/^let s:js_mid_line_comment = '\\s*\\(\\\/\\*.*\\*\\\/\\)*\\s*'$/;"	v
jumpToBookmark	bundle/fuzzyfinder/autoload/fuf/bookmarkfile.vim	/^function s:jumpToBookmark(path, mode, pattern, lnum)$/;"	f
jumpToTag	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:jumpToTag(item, mode)$/;"	f
jump_backwards	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
k	test/a.js	/^	k = function(a) {$/;"	r
k	test/a.js	/^	k = {},$/;"	r
keepcpo	bundle/align/autoload/Align.vim	/^let s:keepcpo= &cpo$/;"	v
keepcpo	bundle/align/autoload/AlignMaps.vim	/^let s:keepcpo         = &cpo$/;"	v
keepcpo	bundle/align/plugin/AlignMapsPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
keepcpo	bundle/align/plugin/AlignPlugin.vim	/^let s:keepcpo            = &cpo$/;"	v
keepcpo	bundle/align/plugin/cecutil.vim	/^let s:keepcpo        = &cpo$/;"	v
key	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let key = split(amat, '=')[0]$/;"	v
keysMappingDriven	bundle/autocomplete/autoload/acp.vim	/^  let s:keysMappingDriven = []$/;"	v
l.filter.ID	test/a.js	/^		l.filter.ID = function(a, b) {$/;"	r
l.find.CLASS	test/a.js	/^		l.find.CLASS = function(a, b, c) {$/;"	r
l0	bundle/l9/autoload/l9.vim	/^      let g:l0 += [a:lines[i : j]]$/;"	v
last	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let last = parent$/;"	v
last	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let last.pos += 1$/;"	v
last	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let last.child = cls$/;"	v
last	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let last.pos += 1$/;"	v
last	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let last = current$/;"	v
last	test/a.js	/^			last: function(a, b, c, d) {$/;"	r
launch	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:Snippet
leader	bundle/zencoding/autoload/zencoding.vim	/^        let leader .= (str =~ "\\n" ? ">{\\n" : "{") . str . "}"$/;"	v
leaving_buffer	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def leaving_buffer(self):$/;"	m	class:SnippetManager
leftMatch	test/a.js	/^		leftMatch: {},$/;"	r
lg	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let lg = matchlist(token, '^\\%(linear-gradient\\|lg\\)(\\s*\\(\\w\\+\\)\\s*,\\s*\\([^,]\\+\\)\\s*,\\s*\\([^)]\\+\\)\\s*)$')$/;"	v
lhs	bundle/zencoding/autoload/zencoding.vim	/^          let a:lhs[key] = []$/;"	v
lhs	bundle/zencoding/autoload/zencoding.vim	/^          let a:lhs[key] = a:rhs[key]$/;"	v
lhs	bundle/zencoding/autoload/zencoding.vim	/^        let a:lhs[key] += a:rhs[key]$/;"	v
lhs	bundle/zencoding/autoload/zencoding.vim	/^        let a:lhs[key] = a:rhs[key]$/;"	v
lhs	bundle/zencoding/autoload/zencoding.vim	/^      let lhs = matchstr(line, '.*\\%<'.col.'c.')$/;"	v
line	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def line():$/;"	m	class:Position
line	bundle/zencoding/autoload/zencoding.vim	/^        let line = getline(a:firstline)$/;"	v
line	bundle/zencoding/autoload/zencoding.vim	/^      let line = getline('.')$/;"	v
line	bundle/zencoding/autoload/zencoding.vim	/^      let line = getline(a:firstline)$/;"	v
line	bundle/zencoding/autoload/zencoding.vim	/^      let line = matchstr(line, '^\\(.*\\%'.col('.').'c.\\)')$/;"	v
line	bundle/zencoding/autoload/zencoding.vim	/^    let line = getline('.')$/;"	v
lines	bundle/zencoding/autoload/zencoding.vim	/^      let lines = split(expand, '\\n')$/;"	v
lines	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let lines = split(snippet, "\\n")$/;"	v
lines	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let lines = split(text, "\\n")$/;"	v
listAroundFiles	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:listAroundFiles(dir)$/;"	f
list_snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
lline	bundle/zencoding/autoload/zencoding.vim	/^        let lline = getline(n)$/;"	v
loadedVarName	bundle/l9/autoload/l9.vim	/^  let {loadedVarName} = 1$/;"	v
loaded_Align	bundle/align/autoload/Align.vim	/^let g:loaded_Align = "v35"$/;"	v
loaded_AlignMaps	bundle/align/autoload/AlignMaps.vim	/^let g:loaded_AlignMaps= "v41"$/;"	v
loaded_AlignMapsPlugin	bundle/align/plugin/AlignMapsPlugin.vim	/^let g:loaded_AlignMapsPlugin = "v41"$/;"	v
loaded_AlignPlugin	bundle/align/plugin/AlignPlugin.vim	/^let g:loaded_AlignPlugin = "v35"$/;"	v
loaded_VisualMark	bundle/visualmark/visualmark.vim	/^let loaded_VisualMark = 1$/;"	v
loaded_acp	bundle/autocomplete/plugin/acp.vim	/^let g:loaded_acp = 1$/;"	v
loaded_autoload_acp	bundle/autocomplete/autoload/acp.vim	/^let g:loaded_autoload_acp = 1$/;"	v
loaded_autoload_l9	bundle/l9/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
loaded_cecutil	bundle/align/plugin/cecutil.vim	/^let g:loaded_cecutil = "v18b"$/;"	v
loaded_grep	bundle/grep/plugin/grep.vim	/^let loaded_grep = 1$/;"	v
loaded_jsbeautify	bundle/jsbeautify/plugin/jsbeautify.vim	/^let loaded_jsbeautify = 3$/;"	v
loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
loaded_tcomment	bundle/tcomment/plugin/tcomment.vim	/^let loaded_tcomment = 206$/;"	v
loaded_zencoding_vim	bundle/zencoding/plugin/zencoding.vim	/^let g:loaded_zencoding_vim = 1$/;"	v
lockCount	bundle/autocomplete/autoload/acp.vim	/^let s:lockCount = 0$/;"	v
low_color	colors/jellybeans.vim	/^  let s:low_color = 0$/;"	v
low_color	colors/jellybeans.vim	/^  let s:low_color = 1$/;"	v
lpart	bundle/zencoding/autoload/zencoding.vim	/^            let lpart = substitute(getline(n), '^\\s*', '', '')$/;"	v
lpart	bundle/zencoding/autoload/zencoding.vim	/^          let lpart = substitute(lpart, '\\s\\+$', '', '')$/;"	v
lpart	bundle/zencoding/autoload/zencoding.vim	/^          let lpart = substitute(lpart, '^[0-9.-]\\+\\s\\+', '', '')$/;"	v
lpart	bundle/zencoding/autoload/zencoding.vim	/^        let lpart = substitute(lline, '^\\s\\+', '', '')$/;"	v
lt	test/a.js	/^			lt: function(a, b, c) {$/;"	r
m	test/a.js	/^		m = {$/;"	r
m	test/a.js	/^	m = ["classid", "codebase", "id", "width", "height", "align"];$/;"	r
main	bundle/tcomment/spec/tcomment/issue30_test.c	/^int main()$/;"	f
main	bundle/tcomment/spec/tcomment/issue30_test_2.c	/^int main()$/;"	f
main	bundle/tcomment/spec/tcomment/issue30_test_3.c	/^int main()$/;"	f
makeAdditionalMigemoPattern	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeAdditionalMigemoPattern(pattern)$/;"	f
makeCtagsCmd	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:makeCtagsCmd(bufNr)$/;"	f
makeCurrentBehaviorSet	bundle/autocomplete/autoload/acp.vim	/^function s:makeCurrentBehaviorSet()$/;"	f
makeDefaultBehavior	bundle/autocomplete/plugin/acp.vim	/^function s:makeDefaultBehavior()$/;"	f
makeFileAbbrInfo	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeFileAbbrInfo(item, maxLenStats)$/;"	f
makeFuzzyMatchingExpr	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeFuzzyMatchingExpr(target, pattern)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:makeItem(nr)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:makeItem(tag, itemMap)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:makeItem(line)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:makeItem(line, bufnrPrev)$/;"	f
makeItem	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:makeItem(qfItem)$/;"	f
makePartialMatchingExpr	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makePartialMatchingExpr(target, pattern)$/;"	f
makeRefiningExpr	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:makeRefiningExpr(pattern)$/;"	f
makeSnipmateItem	bundle/autocomplete/autoload/acp.vim	/^function s:makeSnipmateItem(key, snip)$/;"	f
mapForMappingDriven	bundle/autocomplete/autoload/acp.vim	/^function s:mapForMappingDriven()$/;"	f
mapleader	bundle/align/plugin/AlignMapsPlugin.vim	/^  let s:mapleader = exists("g:mapleader")? g:mapleader : '\\'$/;"	v
match	test/a.js	/^		match: {$/;"	r
match_ignorecase	bundle/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
match_words	bundle/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
matched	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def matched(self):$/;"	m	class:Snippet
matches	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def matches(self, trigger):$/;"	m	class:Snippet
mergeConfig	bundle/zencoding/autoload/zencoding.vim	/^function! s:mergeConfig(lhs, rhs)$/;"	f
mkline	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mode	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
mode	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def mode(self):$/;"	m	class:_VimPosition
modeNames	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:modeNames = []$/;"	v
mode_colors	bundle/powerline/autoload/Pl/Parser.vim	/^							let mode_colors[col] = base_color_mode[col]$/;"	v
mode_colors	bundle/powerline/autoload/Pl/Parser.vim	/^				let mode_colors = get(colors, mode, get(colors, 'n', {}))$/;"	v
mode_colors	bundle/powerline/autoload/Pl/Parser.vim	/^				let mode_colors = get(seg_curr.colors, mode, seg_curr.colors['n'])$/;"	v
modifier	bundle/align/plugin/cecutil.vim	/^ let s:modifier= "sil "$/;"	v
modifier	bundle/align/plugin/cecutil.vim	/^ let s:modifier= "sil keepj "$/;"	v
move	bundle/ultisnips/plugin/UltiSnips/geometry.py	/^    def move(self, pivot, diff):$/;"	m	class:Position
moveToOtherTabpageOpeningBuffer	bundle/l9/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f
mx	bundle/zencoding/autoload/zencoding.vim	/^    let mx = '|\\(\\%(html\\|haml\\|slim\\|e\\|c\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
mx	bundle/zencoding/autoload/zencoding/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
n	test/a.js	/^			n: {$/;"	r
n	test/a.js	/^		var n = [];$/;"	r
n	test/a.js	/^	n = function(a, b) {$/;"	r
name	test/a.js	/^			NAME: \/\\[name=['"]*((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)['"]*\\]\/,$/;"	r
nc	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let nc = len(current.child)$/;"	v
ne	test/a.js	/^			ne: {$/;"	r
needs_update	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def needs_update(self):$/;"	m	class:_SnippetDictionary
new_scratch_buffer	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def new_scratch_buffer(text):$/;"	f
next	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def next(self):$/;"	m	class:_TextIterator
no	bundle/ultisnips/plugin/UltiSnips/text_objects/_tabstop.py	/^    def no(self):$/;"	m	class:TabStop
nr	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def nr(self):$/;"	m	class:VimBuffer
ntabs_to_proper_indent	bundle/ultisnips/plugin/UltiSnips/util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
nth	test/a.js	/^			nth: function(a, b, c) {$/;"	r
null	test/a.js	/^baidu.event._eventFilter.mouseenter = window.attachEvent ? null: function(a, b, c) {$/;"	r
null	test/a.js	/^baidu.event._eventFilter.mouseleave = window.attachEvent ? null: function(a, b, c) {$/;"	r
nullCommentString	bundle/tcomment/autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
nw	test/a.js	/^			nw: {$/;"	r
o	test/a.js	/^	function o(a) {$/;"	r
o	test/a.js	/^	var o = ["<object "];$/;"	r
object_beg	indent/javascript.vim	/^let s:object_beg = '{[^}]*' . s:js_end_line_comment . '$'$/;"	v
object_end	indent/javascript.vim	/^let s:object_end = '^' . s:js_mid_line_comment . '}[;,]\\='$/;"	v
odd	test/a.js	/^			odd: function(a, b) {$/;"	r
oldselection	bundle/zencoding/autoload/zencoding.vim	/^    let oldselection = &selection$/;"	v
onBufDelete	bundle/l9/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f
onBufWriteCmd	bundle/l9/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f
onCommandPre	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:onCommandPre()$/;"	f
oneTimeVariables	bundle/fuzzyfinder/autoload/fuf.vim	/^let s:oneTimeVariables = []$/;"	v
onfailure	test/a.js	/^			onfailure: function() {$/;"	r
onfailure	test/a.js	/^		onfailure: function(a) {$/;"	r
onsuccess	test/a.js	/^		onsuccess: function(a, b) {$/;"	r
onsuccess	test/a.js	/^		onsuccess: function(a, c) {$/;"	r
opt	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def opt(self, option, default=None):$/;"	m	class:SnippetUtil
order	test/a.js	/^		order: ["ID", "NAME", "TAG"],$/;"	r
origMap	bundle/l9/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
overwrite	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def overwrite(self, gtext = None):$/;"	m	class:TextObject
overwrites_previous	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def overwrites_previous(self):$/;"	m	class:Snippet
p	test/a.js	/^		o, p = function(i) {$/;"	r
p	test/a.js	/^		p = function(a, b) {$/;"	r
p	test/a.js	/^	var p = function(a, b) {$/;"	r
p	test/a.js	/^	var p = {$/;"	r
padding_left	bundle/powerline/autoload/Pl/Parser.vim	/^					let padding_left  = (seg_curr.padding && side == s:RIGHT_SIDE ? repeat(' ', s:PADDING) : '')$/;"	v
padding_left	bundle/powerline/autoload/Pl/Parser.vim	/^					let padding_left  = repeat(' ', s:PADDING)$/;"	v
padding_left	bundle/powerline/autoload/Pl/Parser.vim	/^			let padding_left  = (side == s:LEFT_SIDE  ? repeat(' ', s:PADDING) : '')$/;"	v
padding_right	bundle/powerline/autoload/Pl/Parser.vim	/^					let padding_right = (seg_curr.padding && side == s:LEFT_SIDE  ? repeat(' ', s:PADDING) : '')$/;"	v
padding_right	bundle/powerline/autoload/Pl/Parser.vim	/^					let padding_right = repeat(' ', s:PADDING)$/;"	v
padding_right	bundle/powerline/autoload/Pl/Parser.vim	/^			let padding_right = (side == s:RIGHT_SIDE ? repeat(' ', s:PADDING) : '')$/;"	v
paren_beg	indent/javascript.vim	/^let s:paren_beg = '([^)]*' . s:js_end_line_comment . '$'$/;"	v
paren_end	indent/javascript.vim	/^let s:paren_end = '^' . s:js_mid_line_comment . '[^(]*)[;,]*'$/;"	v
parent	bundle/zencoding/autoload/zencoding/lang/html.vim	/^              let parent = tmp$/;"	v
parent	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let parent = last$/;"	v
parent	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let parent = tmp$/;"	v
parent	test/a.js	/^			parent: function(a) {$/;"	r
parse	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def parse(self):$/;"	m	class:_SnippetsFileParser
parse	bundle/ultisnips/plugin/UltiSnips/text_objects/_parser.py	/^    def parse(self, add_ts_zero = False):$/;"	m	class:TOParser
parseChangesLine	bundle/fuzzyfinder/autoload/fuf/changelist.vim	/^function s:parseChangesLine(line)$/;"	f
parseHelpTagEntry	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:parseHelpTagEntry(line, tagFile)$/;"	f
parseHelpTagFiles	bundle/fuzzyfinder/autoload/fuf/help.vim	/^function s:parseHelpTagFiles(tagFiles, key)$/;"	f
parseJumpsLine	bundle/fuzzyfinder/autoload/fuf/jumplist.vim	/^function s:parseJumpsLine(line, bufnrPrev)$/;"	f
parseJumpsLine	bundle/fuzzyfinder/autoload/fuf/quickfix.vim	/^function s:parseJumpsLine(line)$/;"	f
parseTagFiles	bundle/fuzzyfinder/autoload/fuf/tag.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagFiles	bundle/fuzzyfinder/autoload/fuf/taggedfile.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f
parseTagLine	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^function s:parseTagLine(line)$/;"	f
parse_args	bundle/ultisnips/test.py	/^    def parse_args():$/;"	f
parse_content	bundle/ultisnips/utils/get_tm_snippets.py	/^def parse_content(c):$/;"	f
parser_pos	bundle/jsbeautify/plugin/jsbeautify.vim	/^					let s:parser_pos += 1$/;"	v
parser_pos	bundle/jsbeautify/plugin/jsbeautify.vim	/^				let s:parser_pos += 1$/;"	v
parser_pos	bundle/jsbeautify/plugin/jsbeautify.vim	/^			let s:parser_pos += 1$/;"	v
parser_pos	bundle/jsbeautify/plugin/jsbeautify.vim	/^			let s:parser_pos += 2$/;"	v
parser_pos	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let s:parser_pos += 1$/;"	v
parser_pos	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let s:parser_pos += 2$/;"	v
parser_pos	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let s:parser_pos += 3$/;"	v
part	bundle/zencoding/autoload/zencoding.vim	/^        let part = substitute(line, '^\\s*', '', '')$/;"	v
part	bundle/zencoding/autoload/zencoding.vim	/^      let part = matchstr(line, '\\([a-zA-Z0-9:_\\-\\@|]\\+\\)$')$/;"	v
part	bundle/zencoding/autoload/zencoding.vim	/^      let part = matchstr(line, '\\(\\S.*\\)$')$/;"	v
part	bundle/zencoding/autoload/zencoding.vim	/^      let part = substitute(line, '^\\s*', '', '')$/;"	v
part	bundle/zencoding/autoload/zencoding.vim	/^      let part = zencoding#lang#{rtype}#findTokens(part)$/;"	v
password	test/a.js	/^			password: function(a) {$/;"	r
peek	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def peek(self, count = 1):$/;"	m	class:_TextIterator
pos	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def pos(self):$/;"	m	class:VimState
pos	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let pos += [last.pos]$/;"	v
ppos	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def ppos(self):$/;"	m	class:VimState
preFilter	test/a.js	/^		preFilter: {$/;"	r
primary_filetype	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def primary_filetype(self):$/;"	m	class:SnippetManager
print_active_worker_keys	bundle/l9/autoload/l9/async.py	/^    def print_active_worker_keys(self):$/;"	m	class:Asyncer
print_newline	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:print_newline(ignore_repeated) $/;"	f
print_output	bundle/l9/autoload/l9/async.py	/^    def print_output(self, var_key):$/;"	m	class:Asyncer
print_space	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:print_space()$/;"	f
print_token	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:print_token()$/;"	f
print_worker_keys	bundle/l9/autoload/l9/async.py	/^    def print_worker_keys(self):$/;"	m	class:Asyncer
put	bundle/l9/autoload/l9/async.py	/^    def put(self, executor):$/;"	m	class:Worker
q	test/a.js	/^				l.relative[q] ? r = w.pop() : q = "",$/;"	r
q	test/a.js	/^				r === q && (q = []);$/;"	r
q	test/a.js	/^		for (var m = e.firstChild, n = k[256], o = k[257], p = k[258], q = [], g = g ? p: 0; m; m = m.nextSibling) if (f < g) e.removeChild(m);$/;"	r
q	test/a.js	/^		q = [],$/;"	r
q	test/a.js	/^	function q(a) {$/;"	r
q	test/a.js	/^	function q(g) {$/;"	r
q	test/a.js	/^	q = {$/;"	r
qext.FontDetect	test/a.js	/^qext.FontDetect = function() {$/;"	r
qext.SelfStylesheet	test/a.js	/^qext.SelfStylesheet = function(a, b, c) {$/;"	r
qext.SelfStylesheet.prototype	test/a.js	/^qext.SelfStylesheet.prototype = {$/;"	r
qext.fn.addEventMap	test/a.js	/^qext.fn.addEventMap = function(a, b, c, d) {$/;"	r
qext.fn.changeTingHeight	test/a.js	/^qext.fn.changeTingHeight = function(a, b) {$/;"	r
qext.fn.getAncestorByClass	test/a.js	/^qext.fn.getAncestorByClass = function(a, b) {$/;"	r
qext.fn.getDimensions	test/a.js	/^qext.fn.getDimensions = function(a) {$/;"	r
qext.fn.imgCenterCrop	test/a.js	/^qext.fn.imgCenterCrop = function(a, b, c) {$/;"	r
qext.fn.onTingHeightChange	test/a.js	/^qext.fn.onTingHeightChange = function() {},$/;"	r
qext.fn.resizeImgSize	test/a.js	/^qext.fn.resizeImgSize = function(a, b) {$/;"	r
qext.fn.scrollFix	test/a.js	/^qext.fn.scrollFix = function(a, b, c) {$/;"	r
qext.fn.setStoken	test/a.js	/^qext.fn.setStoken = function() {$/;"	r
qext.lazy.ImageLoad	test/a.js	/^qext.lazy.ImageLoad = function() {$/;"	r
qext.stylesheet	test/a.js	/^qext.stylesheet = function(a, b, c) {$/;"	r
qing.ajax	test/a.js	/^qing.ajax = {},$/;"	r
qing.ajax.get	test/a.js	/^qing.ajax.get = function(a, b, c, d, e) {$/;"	r
qing.ajax.post	test/a.js	/^qing.ajax.post = function(a, b, c, d) {$/;"	r
qing.ajax.qingSource	test/a.js	/^qing.ajax.qingSource = "",$/;"	r
qing.ajax.request	test/a.js	/^qing.ajax.request = function() {$/;"	r
qing.ajax.requestFromList	test/a.js	/^qing.ajax.requestFromList = [{$/;"	r
qing.getUniqueId	test/a.js	/^qing.getUniqueId = function() {$/;"	r
qing.registNS	test/a.js	/^qing.registNS = function(fullNS, isIgnorSelf) {$/;"	r
qing.sio	test/a.js	/^qing.sio = {},$/;"	r
qing.sio.callByBrowser	test/a.js	/^qing.sio.callByBrowser = function(a, b, c) {$/;"	r
qing.sio.callByServer	test/a.js	/^qing.sio.callByServer = function(a, b, c) {$/;"	r
qing.sio.jsLoader	test/a.js	/^qing.sio.jsLoader = function(a) {$/;"	r
qing.sio.log	test/a.js	/^qing.sio.log = function(a) {$/;"	r
qing.url	test/a.js	/^qing.url = {},$/;"	r
qing.url.jsonToQuery	test/a.js	/^qing.url.jsonToQuery = function(a, b) {$/;"	r
r	test/a.js	/^	document.documentElement.compareDocumentPosition ? r = function(a, b) {$/;"	r
r	test/a.js	/^	function r(a) {$/;"	r
radio	test/a.js	/^			radio: function(a) {$/;"	r
range_start	bundle/powerline/autoload/Pl/Parser.vim	/^		let range_start = (i == len(segments) - 1 ? i : i + 1)$/;"	v
record_output	bundle/l9/autoload/l9/async.py	/^    def record_output(self, line):$/;"	m	class:Worker
registerCoverage	bundle/fuzzyfinder/autoload/fuf/coveragefile.vim	/^function s:registerCoverage()$/;"	f
relative	test/a.js	/^		relative: {$/;"	r
reload	bundle/zencoding/unittest.vim	/^function! s:reload(d)$/;"	f
remember_buffer	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def remember_position(self):$/;"	m	class:VimState
remembered_buffer	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
removeItemFromCache	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:removeItemFromCache(word)$/;"	f
removeRule	test/a.js	/^		removeRule: function(a) {$/;"	r
remove_indent	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:remove_indent()$/;"	f
renewCachesOfAllModes	bundle/fuzzyfinder/plugin/fuf.vim	/^function s:renewCachesOfAllModes()$/;"	f
replace	bundle/ultisnips/plugin/UltiSnips/text_objects/_transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace_initital_text	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def replace_initital_text(self):$/;"	m	class:SnippetInstance
replace_vars	bundle/ultisnips/utils/get_tm_snippets.py	/^def replace_vars(m):$/;"	f
replay_user_edits	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def replay_user_edits(self, cmds):$/;"	m	class:SnippetInstance
res	bundle/zencoding/autoload/zencoding/util.vim	/^  let res = substitute(res, '^\\s*\\(.*\\)\\s*$', '\\1', 'g')$/;"	v
reset	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset(self):$/;"	m	class:_SnippetDictionary
reset	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset(self, test_error=False):$/;"	m	class:SnippetManager
reset	bundle/ultisnips/plugin/UltiSnips/util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	test/a.js	/^			reset: function(a) {$/;"	r
reset_buffer_filetypes	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def reset_buffer_filetypes(self):$/;"	m	class:SnippetManager
reset_indent	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
rest	bundle/zencoding/autoload/zencoding.vim	/^    let rest = getline('.')[len(line):]$/;"	v
restoreTempOptions	bundle/autocomplete/autoload/acp.vim	/^function s:restoreTempOptions(group)$/;"	f
restore_mode	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:restore_mode()$/;"	f
resulting_string	bundle/jsbeautify/plugin/jsbeautify.vim	/^				let resulting_string .= s:input[s:parser_pos]$/;"	v
resulting_string	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let resulting_string .= sep$/;"	v
resulting_string	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let resulting_string = c$/;"	v
ret	bundle/zencoding/autoload/zencoding.vim	/^      let ret = s:zen_settings[a:type][a:name]$/;"	v
rgb	colors/jellybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb_color	colors/jellybeans.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_level	colors/jellybeans.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_number	colors/jellybeans.vim	/^fun! s:rgb_number(x)$/;"	f
rhs	bundle/zencoding/autoload/zencoding.vim	/^      let rhs = matchstr(line, '\\%>'.(col-1).'c.*')$/;"	v
rtp	autoload/pathogen.vim	/^  let &rtp = pathogen#join(pathogen#uniq(list))$/;"	v
rtype	bundle/zencoding/autoload/zencoding.vim	/^      let rtype = zencoding#lang#exists(type) ? type : 'html'$/;"	v
run	bundle/l9/autoload/l9/async.py	/^    def run(self):$/;"	m	class:Worker
runTest	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	bundle/ultisnips/plugin/UltiSnips/tests/test_geometry.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	bundle/ultisnips/test.py	/^    def runTest(self): self.check_output()$/;"	m	class:_VimTest
rv	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def rv():$/;"	m	class:SnippetUtil
s	test/a.js	/^			s: {$/;"	r
s	test/a.js	/^	s = function(a, b, c) {$/;"	r
s.onerror	test/a.js	/^			s.onerror = function(a) {$/;"	r
s.onreadystatechange	test/a.js	/^			a.hasCallback || (s.onload = s.onreadystatechange = function(a) {$/;"	r
s.type	test/a.js	/^			s.type = "text\/javascript",$/;"	r
sEval	test/a.js	/^	sEval = "",$/;"	r
sNS	test/a.js	/^	sNS = "",$/;"	r
save_cpo	bundle/zencoding/autoload/zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
save_cpo	bundle/zencoding/plugin/zencoding.vim	/^let s:save_cpo = &cpo$/;"	v
save_last_visual_selection	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def save_last_visual_selection(self):$/;"	m	class:SnippetManager
save_regcont	bundle/zencoding/autoload/zencoding.vim	/^        let save_regcont = @"$/;"	v
save_regtype	bundle/zencoding/autoload/zencoding.vim	/^        let save_regtype = getregtype('"')$/;"	v
scoreBoundaryMatching	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:scoreBoundaryMatching(wordForBoundary, pattern, exprBoundary)$/;"	f
scoreSequentialMatching	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:scoreSequentialMatching(word, pattern)$/;"	f
se	test/a.js	/^			se: {$/;"	r
seg	bundle/powerline/autoload/Pl/Parser.vim	/^			let seg = deepcopy(get(segments, j))$/;"	v
seg_name	bundle/powerline/autoload/Pl/Colorscheme.vim	/^					let seg_name = i > 0 ? segment.name .'.'. seg_variants : segment.name$/;"	v
seg_next	bundle/powerline/autoload/Pl/Parser.vim	/^				let seg_next = seg$/;"	v
seg_next	bundle/powerline/autoload/Pl/Parser.vim	/^		let seg_next = s:EMPTY_SEGMENT$/;"	v
seg_ns_name	bundle/powerline/autoload/Pl/Colorscheme.vim	/^					let seg_ns_name = len(segment.ns) > 0 ? segment.ns .':'. seg_name : seg_name$/;"	v
seg_variants	bundle/powerline/autoload/Pl/Colorscheme.vim	/^					let seg_variants = join(segment.variants[0:i], '.')$/;"	v
segment	bundle/powerline/autoload/Pl/Colorscheme.vim	/^						let segment.colors = colorscheme[seg_name]$/;"	v
segment	bundle/powerline/autoload/Pl/Colorscheme.vim	/^						let segment.colors = colorscheme[seg_ns_name]$/;"	v
segment	bundle/powerline/autoload/Pl/Colorscheme.vim	/^				let segment.segments = deepcopy(segment.segments)$/;"	v
segment_mods	bundle/powerline/autoload/Pl/Mod.vim	/^let s:segment_mods = []$/;"	v
select	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def select(start, end):$/;"	f
select_next_tab	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def select_next_tab(self, backwards = False):$/;"	m	class:SnippetInstance
selected	test/a.js	/^			selected: function(a) {$/;"	r
selection	bundle/zencoding/autoload/zencoding.vim	/^    let &selection = 'inclusive'$/;"	v
selection	bundle/zencoding/autoload/zencoding.vim	/^    let &selection = oldselection$/;"	v
self	bundle/fuzzyfinder/autoload/fuf.vim	/^    let self.lastFirstWord = items[0].word$/;"	v
send	bundle/ultisnips/test.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send	bundle/ultisnips/test.py	/^    def send(self, s):$/;"	m	class:VimInterfaceScreen
send	bundle/ultisnips/test.py	/^    def send(self,s):$/;"	m	class:_VimTest
send_keystrokes	bundle/ultisnips/test.py	/^    def send_keystrokes(self, str, sleeptime):$/;"	m	class:VimInterface
send_keystrokes	bundle/ultisnips/test.py	/^    def send_keystrokes(self,s):$/;"	m	class:_VimTest
send_py	bundle/ultisnips/test.py	/^    def send_py(self,s):$/;"	m	class:_VimTest
sep	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let sep = c$/;"	v
set	test/a.js	/^		set: function(a, b) {$/;"	r
set	test/a.js	/^	set: function(a, b) {$/;"	r
setAbbrWithFileAbbrData	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:setAbbrWithFileAbbrData(item, snippedHeads)$/;"	f
setCompletefunc	bundle/autocomplete/autoload/acp.vim	/^function s:setCompletefunc()$/;"	f
setFilters	test/a.js	/^		setFilters: {$/;"	r
setRanks	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:setRanks(item, pattern, exprBoundary, stats)$/;"	f
setTempOption	bundle/autocomplete/autoload/acp.vim	/^function s:setTempOption(group, name, value)$/;"	f
setUp	bundle/ultisnips/test.py	/^    def setUp(self):$/;"	m	class:_VimTest
set_mode	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:set_mode(mode)$/;"	f
sfile	bundle/zencoding/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
sharp	bundle/jsbeautify/plugin/jsbeautify.vim	/^				let sharp .= c$/;"	v
sharp	bundle/jsbeautify/plugin/jsbeautify.vim	/^			let sharp .= c$/;"	v
sharp	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let sharp = "#"$/;"	v
shift	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
show_category	bundle/zencoding/unittest.vim	/^function! s:show_category(category)$/;"	f
show_done	bundle/zencoding/unittest.vim	/^function! s:show_done()$/;"	f
show_ng	bundle/zencoding/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	bundle/zencoding/unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	bundle/zencoding/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_skip	bundle/zencoding/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_title	bundle/zencoding/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	bundle/zencoding/unittest.vim	/^function! s:show_type(type)$/;"	f
side	bundle/powerline/autoload/Pl/Parser.vim	/^				let side = s:RIGHT_SIDE$/;"	v
snipItems	bundle/autocomplete/autoload/acp.vim	/^let s:snipItems = {}$/;"	v
snippet	bundle/zencoding/autoload/zencoding/lang/css.vim	/^        let snippet = substitute(snippet, '|', '${cursor}', 'g')$/;"	v
snippet	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let snippet = current.snippet$/;"	v
snippet	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let snippet = snippets[tag_name]$/;"	v
snippet_dict	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def snippet_dict(self, ft):$/;"	m	class:SnippetManager
snippets	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def snippets(self):$/;"	m	class:_SnippetDictionary
snippets	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let snippets = zencoding#getResource(type, 'snippets', {})$/;"	v
snips_author	bundle/ultisnips/plugin/snipMate_compatibility.vim	/^	let g:snips_author = "John Doe"$/;"	v
spaces	bundle/zencoding/autoload/zencoding.vim	/^      let spaces = matchstr(str, '\\s*\\ze\\${child}')$/;"	v
spaces	bundle/zencoding/autoload/zencoding.vim	/^    let spaces = matchstr(line, '^\\s*')$/;"	v
spaces_to_indent	bundle/ultisnips/plugin/UltiSnips/util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
start	bundle/ultisnips/plugin/UltiSnips/text_objects/_base.py	/^    def start(self):$/;"	m	class:TextObject
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:MirrorToken
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:PythonCodeToken
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:ShellCodeToken
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:TabStopToken
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:TransformationToken
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:VimLCodeToken
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream):$/;"	m	class:VisualToken
starts_here	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^    def starts_here(klass, stream, chars = '{}\\$`'):$/;"	m	class:EscapeCharToken
str	bundle/zencoding/autoload/zencoding.vim	/^            let str .= getline(n) . "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding.vim	/^            let str .= lpart . "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding.vim	/^        let str = @"$/;"	v
str	bundle/zencoding/autoload/zencoding.vim	/^      let str = ''$/;"	v
str	bundle/zencoding/autoload/zencoding.vim	/^      let str = substitute(str, '\\${child}', inner, '')$/;"	v
str	bundle/zencoding/autoload/zencoding.vim	/^      let str = substitute(str, mx, '', '')$/;"	v
str	bundle/zencoding/autoload/zencoding.vim	/^    let str = part$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^          let str .= "\\n" . indent . line . " |"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^        let str .= " " . text$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let str .= "\/"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let str .= "\\n" . indent . inner$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let str .= '${cursor}'$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let str .= '{' . tmp . ' }'$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let str = substitute(str, '\\${nr}', "\\n", 'g')$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let str = substitute(str, '\\%(\\\\\\)\\@\\<!\\(\\$\\+\\)\\([^{#]\\|$\\)', '\\=printf("%0".len(submatch(1))."d", itemno+1).submatch(2)', 'g')$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let str = substitute(str, '\\\\\\$', '$', 'g')$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^    let str = current.value[1:-2]$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^  let str .= "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let str .= "\\n" . indent$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^          let str .= "\\n" . indent$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let str .= inner$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let str .= "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let str .= '${cursor}'$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let str .= "<\/" . current_name . ">"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let str .= ">"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let str .= "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let str .= "\\n<!-- \/" . comment . " -->"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let str .= settings.html.empty_element_suffix$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let str .= text$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let str = "<!-- " . comment . " -->\\n" . str$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^        let str .= indent . line . "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^      let str .= "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^    let str .= indent . inner$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/scss.vim	/^        let str .= indent . line . "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/scss.vim	/^      let str .= " {\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/scss.vim	/^    let str .= indent . inner . "\\n}\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^        let str .= indent . "| " . line . "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let str .= "\\n" . indent . inner$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let str .= "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let str .= '${cursor}'$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let str = substitute(str, '\\${nr}', "\\n", 'g')$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let str = substitute(str, '\\%(\\\\\\)\\@\\<!\\(\\$\\+\\)\\([^{#]\\|$\\)', '\\=printf("%0".len(submatch(1))."d", itemno+1).submatch(2)', 'g')$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let str = substitute(str, '\\\\\\$', '$', 'g')$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^    let str .= "\\n"$/;"	v
str	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^    let str = current.value[1:-2]$/;"	v
submit	test/a.js	/^			submit: function(a) {$/;"	r
sw	test/a.js	/^			sw: {$/;"	r
switch_beg_next_line	indent/javascript.vim	/^let s:switch_beg_next_line = 'switch\\s*(.*)\\s*' . s:js_mid_line_comment . s:js_end_line_comment . '$'$/;"	v
switch_beg_same_line	indent/javascript.vim	/^let s:switch_beg_same_line = 'switch\\s*(.*)\\s*' . s:js_mid_line_comment . '{\\s*' . s:js_line_comment . '$'$/;"	v
switch_mid	indent/javascript.vim	/^let s:switch_mid = '^.*\\(case.*\\|default\\)\\s*:\\s*' $/;"	v
syn_comment	indent/javascript.vim	/^let s:syn_comment = '\\(Comment\\|String\\|Regexp\\)'$/;"	v
t	test/a.js	/^	function t(a) {$/;"	r
tagDataCache	bundle/fuzzyfinder/autoload/fuf/buffertag.vim	/^    let s:tagDataCache[key] = {$/;"	v
tag_name	bundle/zencoding/autoload/zencoding/lang/css.vim	/^      let tag_name = tag_name[:-2]$/;"	v
tag_name	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let tag_name = token$/;"	v
tcomment	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
tcomment	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
tcomment	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
tcommentBlankLines	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentBlankLines = 1    "{{{2$/;"	v
tcommentBlockC	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
tcommentBlockC2	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
tcommentBlockXML	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentBlockXML = "<!--%s-->\\n  "   "{{{2$/;"	v
tcommentGuessFileType	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
tcommentGuessFileType_django	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
tcommentGuessFileType_dsl	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
tcommentGuessFileType_eruby	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
tcommentGuessFileType_html	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
tcommentGuessFileType_php	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
tcommentGuessFileType_tskeleton	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
tcommentGuessFileType_vim	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
tcommentIgnoreTypes_php	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
tcommentInlineC	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentInlineC = g:tcommentLineC   "{{{2$/;"	v
tcommentInlineXML	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentInlineXML = "<!-- %s -->"   "{{{2$/;"	v
tcommentLineC	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentLineC = {$/;"	v
tcommentMapLeader1	bundle/tcomment/plugin/tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
tcommentMapLeader2	bundle/tcomment/plugin/tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
tcommentMapLeaderOp1	bundle/tcomment/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
tcommentMapLeaderOp2	bundle/tcomment/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC' "{{{2$/;"	v
tcommentModeExtra	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
tcommentOpModeExtra	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
tcommentOptions	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
tcommentSyntaxMap	bundle/tcomment/autoload/tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
tempOptionSet	bundle/autocomplete/autoload/acp.vim	/^  let s:tempOptionSet[a:group] = {}$/;"	v
tempOptionSet	bundle/autocomplete/autoload/acp.vim	/^let s:tempOptionSet = [{}, {}]$/;"	v
termBlack	colors/jellybeans.vim	/^    let s:termBlack = "Black"$/;"	v
termBlack	colors/jellybeans.vim	/^    let s:termBlack = "Grey"$/;"	v
test	bundle/zencoding/unittest.vim	/^function! s:test(...)$/;"	f
text	bundle/powerline/autoload/Pl/Parser.vim	/^					let text = s:AddDivider(text, side, mode, colors, seg_prev, seg_curr, seg_next)$/;"	v
text	bundle/powerline/autoload/Pl/Parser.vim	/^				let text = '%(%#'. hl_group .'#'. padding_left . text . padding_right . '%)'$/;"	v
text	bundle/powerline/autoload/Pl/Parser.vim	/^				let text = seg_curr.text$/;"	v
text	bundle/powerline/autoload/Pl/Parser.vim	/^			let text = join(call('s:ParseSegments', func_params), '')$/;"	v
text	bundle/powerline/autoload/Pl/Parser.vim	/^			let text = s:AddDivider(padding_left . text . padding_right, side, mode, seg_curr.colors, seg_prev, seg_curr, seg_next)$/;"	v
text	bundle/powerline/autoload/Pl/Segment.vim	/^			let text = substitute($/;"	v
text	bundle/powerline/autoload/Pl/Segment.vim	/^		let text = a:1$/;"	v
text	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^        let text = substitute(text, '\\${nr}', "\\n", 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^        let text = substitute(text, '\\%(\\\\\\)\\@\\<!\\(\\$\\+\\)\\([^{#]\\|$\\)', '\\=printf("%0".len(submatch(1))."d", itemno+1).submatch(2)', 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^        let text = substitute(text, '\\\\\\$', '$', 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let text = current.child[0].value[1:-2]$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/haml.vim	/^      let text = current.value[1:-2]$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let text = substitute(text, '\\${nr}', "\\n", 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let text = substitute(text, '\\%(\\\\\\)\\@\\<!\\(\\$\\+\\)\\([^{#]\\|$\\)', '\\=printf("%0".len(submatch(1))."d", itemno+1).submatch(2)', 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/html.vim	/^      let text = substitute(text, '\\\\\\$', '$', 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/html.vim	/^    let text = current.value[1:-2]$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^    let text = substitute(text, '\\${cursor}', '', 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^    let text = substitute(text, '\\s*;$', '', '')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/sass.vim	/^    let text = zencoding#lang#css#toString(settings, current, type, inline, filters, itemno, indent)$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^        let text = substitute(text, '\\${nr}', "\\n", 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^        let text = substitute(text, '\\%(\\\\\\)\\@\\<!\\(\\$\\+\\)\\([^{#]\\|$\\)', '\\=printf("%0".len(submatch(1))."d", itemno+1).submatch(2)', 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^        let text = substitute(text, '\\\\\\$', '$', 'g')$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let text = current.child[0].value[1:-2]$/;"	v
text	bundle/zencoding/autoload/zencoding/lang/slim.vim	/^      let text = current.value[1:-2]$/;"	v
text	test/a.js	/^			text: function(a) {$/;"	r
text_to_vim	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^def text_to_vim(start, end, text):$/;"	f
this.__listeners	test/a.js	/^	! this.__listeners && (this.__listeners = {}),$/;"	r
this.__listeners	test/a.js	/^	if (typeof b != "function") return; ! this.__listeners && (this.__listeners = {});$/;"	r
this.eStyle.type	test/a.js	/^	b ? (this.eStyle = b.createElement("style"), this.eStyle.type = "text\/css", this.eStyle.id = c) : this.eStyle = qing.dom.create("style", {$/;"	r
this.load	test/a.js	/^		this.load = function() {$/;"	r
this.onfailure	test/a.js	/^		this.onfailure = function(b) {$/;"	r
this.onsuccess	test/a.js	/^		this.onsuccess = function(b) {$/;"	r
this.rules	test/a.js	/^	this.rules = {};$/;"	r
timerBegin	bundle/l9/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f
timerData	bundle/l9/plugin/l9.vim	/^  let s:timerData = []$/;"	v
timerDump	bundle/l9/plugin/l9.vim	/^  function s:timerDump()$/;"	f
timerStop	bundle/l9/plugin/l9.vim	/^  function s:timerStop()$/;"	f
timerTagMaxLen	bundle/l9/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
tmp	bundle/zencoding/autoload/zencoding/lang/html.vim	/^              let tmp = parent.parent$/;"	v
tmp	bundle/zencoding/autoload/zencoding/lang/html.vim	/^        let tmp = parent.parent$/;"	v
toLowerForIgnoringCase	bundle/fuzzyfinder/autoload/fuf.vim	/^function s:toLowerForIgnoringCase(str)$/;"	f
to_vim	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
toggle	test/a.js	/^		toggle: function() {$/;"	r
tokenize	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def tokenize(text, indent, offset):$/;"	f
transform	bundle/ultisnips/plugin/UltiSnips/tests/test_diff.py	/^def transform(a, cmds):$/;"	f
translate	bundle/ultisnips/plugin/UltiSnips/_vim.py	/^    def translate(self, s):$/;"	m	class:_Real_LangMapTranslator
trigger	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def trigger(self):$/;"	m	class:Snippet
trim_output	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:trim_output()$/;"	f
type	test/a.js	/^			type: function(a) {$/;"	r
typesDirty	bundle/tcomment/autoload/tcomment.vim	/^let s:typesDirty = 1$/;"	v
u	test/a.js	/^	function u(a) {$/;"	r
undefined	test/a.js	/^				return d ? d.id === a[1] || typeof d.getAttributeNode != "undefined" && d.getAttributeNode("id").nodeValue === a[1] ? [d] : undefined: []$/;"	r
unescape	bundle/ultisnips/plugin/UltiSnips/text_objects/_lexer.py	/^def unescape(s):$/;"	f
unescape	bundle/ultisnips/utils/get_tm_snippets.py	/^def unescape(s):$/;"	f
unindent	bundle/jsbeautify/plugin/jsbeautify.vim	/^function! s:unindent()$/;"	f
unmapForMappingDriven	bundle/autocomplete/autoload/acp.vim	/^function s:unmapForMappingDriven()$/;"	f
unshift	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
updateBufTimes	bundle/fuzzyfinder/autoload/fuf/buffer.vim	/^function s:updateBufTimes()$/;"	f
updateData	bundle/fuzzyfinder/autoload/fuf/mrufile.vim	/^function s:updateData()$/;"	f
updateInfo	bundle/fuzzyfinder/autoload/fuf/mrucmd.vim	/^function s:updateInfo(cmd)$/;"	f
update_textobjects	bundle/ultisnips/plugin/UltiSnips/text_objects/_snippet_instance.py	/^    def update_textobjects(self):$/;"	m	class:SnippetInstance
use_pipe_for_cursor	bundle/zencoding/autoload/zencoding/lang/css.vim	/^    let use_pipe_for_cursor = zencoding#getResource(type, 'use_pipe_for_cursor', 1)$/;"	v
user_zen_leader_key	bundle/zencoding/plugin/zencoding.vim	/^  let g:user_zen_leader_key = '<c-y>'$/;"	v
v	bundle/ultisnips/plugin/UltiSnips/text_objects/_python_code.py	/^    def v(self):$/;"	m	class:SnippetUtil
v	bundle/zencoding/autoload/zencoding.vim	/^    let v = s:zen_settings[a:type][a:name]$/;"	v
v	test/a.js	/^	function v(a) {$/;"	r
v	test/a.js	/^	var v = function(a, b, c) {$/;"	r
val	bundle/zencoding/autoload/zencoding/lang/html.vim	/^              let val = val[1:-2]$/;"	v
val	bundle/zencoding/autoload/zencoding/lang/html.vim	/^            let val = amat[len(key)+1:]$/;"	v
visualmode	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def visualmode(self):$/;"	m	class:_VimPosition
w	test/a.js	/^			w: {$/;"	r
w	test/a.js	/^			} else k = w = []$/;"	r
w	test/a.js	/^		w = [],$/;"	r
wanted_newline	bundle/jsbeautify/plugin/jsbeautify.vim	/^		let wanted_newline = n_newlines == 1$/;"	v
width	test/a.js	/^			width: function() {$/;"	r
window.baiduInstance	test/a.js	/^window.baiduInstance = function(a) {$/;"	r
window.qing	test/a.js	/^typeof window.qing == "undefined" && (window.qing = {}),$/;"	r
wrapper	bundle/ultisnips/plugin/UltiSnips/__init__.py	/^    def wrapper(self, *args, **kwds):$/;"	f
write_snippets	bundle/ultisnips/utils/get_tm_snippets.py	/^def write_snippets(snip_descr, f):$/;"	f
y	test/a.js	/^	function y(a) {$/;"	r
zen_settings	bundle/zencoding/autoload/zencoding.vim	/^let s:zen_settings = {$/;"	v
zencoding_curl_command	bundle/zencoding/plugin/zencoding.vim	/^  let g:zencoding_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
zencoding_debug	bundle/zencoding/plugin/zencoding.vim	/^  let g:zencoding_debug = 0$/;"	v
